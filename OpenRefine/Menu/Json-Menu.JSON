[
  {
    "op": "core/column-rename",
    "description": "Rename column id to ID",
    "oldColumnName": "id",
    "newColumnName": "ID"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column name to NAME",
    "oldColumnName": "name",
    "newColumnName": "NAME"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Name at index 2 based on column NAME using expression jython:if value is None or not value:\n      return \"No Name\"\nelse:\n      return value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Name",
    "columnInsertIndex": 2,
    "baseColumnName": "NAME",
    "expression": "jython:if value is None or not value:\n      return \"No Name\"\nelse:\n      return value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column NAME",
    "columnName": "NAME"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Name using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Name",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Name using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Name using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Name",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Name using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Name",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]",
          "RESTAURANT NAME AND/OR LOCATION NOT GIVEN]",
          "RESTAURANT NAME AND/OR LOCATION NOT GIVEN",
          "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN"
        ],
        "to": "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE MERCHANT'S CLUB",
          "THE MERCHANTS CLUB",
          "THE MERCHANTS' CLUB"
        ],
        "to": "THE MERCHANT'S CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICOS",
          "DELMONICO'S",
          "DELMONICOS."
        ],
        "to": "DELMONICOS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RIGGS'",
          "RIGG'S",
          "RIGGS"
        ],
        "to": "RIGGS'"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHILDS",
          "CHILD'S"
        ],
        "to": "CHILDS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MARIE ANTOINETTE",
          "MARIE ANTOINETTE HOTEL"
        ],
        "to": "HOTEL MARIE ANTOINETTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL KNICKERBOCKER",
          "KNICKERBOCKER HOTEL"
        ],
        "to": "HOTEL KNICKERBOCKER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MET-LIFE BUILDING",
          "METLIFE BUILDING"
        ],
        "to": "MET-LIFE BUILDING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. \"FREDERIK VIII\"",
          "S.S. FREDERIK VIII"
        ],
        "to": "S.S. \"FREDERIK VIII\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FAIRMONT HOTEL",
          "HOTEL FAIRMONT"
        ],
        "to": "FAIRMONT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY-PLAZA HOTEL",
          "HOTEL COPLEY-PLAZA"
        ],
        "to": "COPLEY-PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. DENIS HOTEL",
          "HOTEL ST. DENIS"
        ],
        "to": "ST. DENIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COSMOPOLITAN HOTEL",
          "COSMOPOLITAN... HOTEL"
        ],
        "to": "COSMOPOLITAN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PONTCHARTRAIN",
          "PONTCHARTRAIN HOTEL"
        ],
        "to": "HOTEL PONTCHARTRAIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ASTOR",
          "ASTOR HOTEL"
        ],
        "to": "HOTEL ASTOR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL IMPERIAL",
          "IMPERIAL HOTEL"
        ],
        "to": "HOTEL IMPERIAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RIGG'S TWENTIETH STREET RESTAURANT",
          "RIGGS' TWENTIETH STREET RESTAURANT"
        ],
        "to": "RIGG'S TWENTIETH STREET RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ADAMS' RESTAURANT",
          "ADAM'S RESTAURANT"
        ],
        "to": "ADAMS' RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRAUNCES' TAVERN",
          "FRAUNCES TAVERN"
        ],
        "to": "FRAUNCES' TAVERN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GROCERS HALL",
          "GROCERS' HALL"
        ],
        "to": "GROCERS HALL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL STATLER",
          "STATLER HOTEL"
        ],
        "to": "HOTEL STATLER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. NEW YORK",
          "U.S.S. NEW YORK (?)"
        ],
        "to": "U.S.S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LAFAYETTE HOTEL",
          "HOTEL LAFAYETTE"
        ],
        "to": "LAFAYETTE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE NEW WILLARD HOTEL",
          "THE NEW WILLARD HOTEL."
        ],
        "to": "THE NEW WILLARD HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELKS CLUB HOUSE",
          "ELKS' CLUB HOUSE"
        ],
        "to": "ELKS CLUB HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCHANT'S CLUB",
          "MERCHANTS CLUB"
        ],
        "to": "MERCHANT'S CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL"
        ],
        "to": "HOTEL SAVOY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. NEW YORK",
          "U.S.S. NEW YORK"
        ],
        "to": "U. S. S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. FLORIDA",
          "U.S.S. FLORIDA"
        ],
        "to": "U. S. S. FLORIDA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.H. MEYER RATHSKELLER",
          "A.H.MEYER RATHSKELLER"
        ],
        "to": "A.H. MEYER RATHSKELLER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOFBRAU HAUS",
          "HOF BRAU HAUS"
        ],
        "to": "HOFBRAU HAUS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY-PLAZA HOTEL",
          "COPLEY PLAZA HOTEL"
        ],
        "to": "COPLEY-PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE - STRATFORD",
          "BELLEVUE-STRATFORD"
        ],
        "to": "BELLEVUE - STRATFORD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. WYOMING",
          "U.S.S. WYOMING"
        ],
        "to": "U. S. S. WYOMING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RITZ CARLTON HOTEL",
          "RITZ-CARLTON HOTEL"
        ],
        "to": "RITZ CARLTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RITZ CARLTON",
          "RITZ-CARLTON"
        ],
        "to": "RITZ CARLTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAFé DES BEAUX ARTS",
          "CAFé DES BEAUX-ARTS"
        ],
        "to": "CAFé DES BEAUX ARTS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF ASTORIA",
          "WALDORF-ASTORIA"
        ],
        "to": "WALDORF ASTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY PLAZA",
          "COPLEY-PLAZA"
        ],
        "to": "COPLEY PLAZA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL LA SALLE",
          "HOTEL LASALLE"
        ],
        "to": "HOTEL LA SALLE"
      }
    ]
  },
  {
    "op": "core/column-rename",
    "description": "Rename column sponsor to Sponsor",
    "oldColumnName": "sponsor",
    "newColumnName": "Sponsor"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column event to Event",
    "oldColumnName": "event",
    "newColumnName": "Event"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column venue to Venue",
    "oldColumnName": "venue",
    "newColumnName": "Venue"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column place to Place",
    "oldColumnName": "place",
    "newColumnName": "Place"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column physical_description to PhysicalDescription",
    "oldColumnName": "physical_description",
    "newColumnName": "PhysicalDescription"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column occasion to Occasion",
    "oldColumnName": "occasion",
    "newColumnName": "Occasion"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column notes to Notes",
    "oldColumnName": "notes",
    "newColumnName": "Notes"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column call_number to CallNumber",
    "oldColumnName": "call_number",
    "newColumnName": "CallNumber"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column keywords to Keywords",
    "oldColumnName": "keywords",
    "newColumnName": "Keywords"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column language to Language",
    "oldColumnName": "language",
    "newColumnName": "Language"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column date to Date",
    "oldColumnName": "date",
    "newColumnName": "Date"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column location to Location",
    "oldColumnName": "location",
    "newColumnName": "Location"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column location_type to LocationType",
    "oldColumnName": "location_type",
    "newColumnName": "LocationType"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column currency to Currency",
    "oldColumnName": "currency",
    "newColumnName": "Currency"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column currency_symbol to CurrencySymbol",
    "oldColumnName": "currency_symbol",
    "newColumnName": "CurrencySymbol"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column status to Status",
    "oldColumnName": "status",
    "newColumnName": "Status"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column page_count to PageCount",
    "oldColumnName": "page_count",
    "newColumnName": "PageCount"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column dish_count to DishCount",
    "oldColumnName": "dish_count",
    "newColumnName": "DishCount"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Sponsor 2 at index 3 based on column Sponsor using expression jython:if value is None or not value:\n    return \"No Sponsor\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Sponsor 2",
    "columnInsertIndex": 3,
    "baseColumnName": "Sponsor",
    "expression": "jython:if value is None or not value:\n    return \"No Sponsor\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Sponsor",
    "columnName": "Sponsor"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Sponsor 2 to Sponsor",
    "oldColumnName": "Sponsor 2",
    "newColumnName": "Sponsor"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - ANTWERPEN - NY",
          "RED STAR LINE - ANTWERPEN -NY",
          "RED STAR LINE - ANTWERPEN NY",
          "RED STAR LINE -ANTWERPEN NY",
          "RED STAR LINE - ANTWERPEN  - NY",
          "RED STAR LINE - ANTWERPEN  NY",
          "RED STAR LINE -ANTWERPEN - NY",
          "RED STAR LINE -ANTWERPEN -NY",
          "RED STAR LINE- ANTWERPEN  NY",
          "RED STAR LINE- ANTWERPEN -NY"
        ],
        "to": "RED STAR LINE - ANTWERPEN - NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN",
          "Norddeutscher Lloyd Bremen",
          "NORDDEUTSCHER LLOYD - BREMEN",
          "NORDDEUTSCHER LLOYD  BREMEN",
          "NORDDEUTSCHER LLOYD BREMEN ",
          "NORDDEUTSCHER LLOYD, BREMEN",
          "BREMEN NORDDEUTSCHER LLOYD",
          "NORDDEUTSCHER LLOYD -  BREMEN",
          "NORDDEUTSCHER LLOYD -BREMEN"
        ],
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " Restaurant name and/or location not given ",
          " Restaurant Name And/Or Location Not Given ",
          "Restaurant name and/or location not given ",
          " Restaurant name and/or location not given  ",
          " Restaurant name and/or location not given",
          "Restaurant name and/or location not given"
        ],
        "to": " Restaurant name and/or location not given "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FIFTH AVENUE HOTEL",
          " FIFTH AVENUE HOTEL ",
          " FIFTH AVENUE HOTEL  ",
          "FIFTH AVENUE HOTEL    ",
          " FIFTH AVENUE HOTEL }",
          "FIFTH AVENUE HOTEL "
        ],
        "to": "FIFTH AVENUE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Delmonicos",
          "Delmonico's",
          "DELMONICO'S",
          "DELMONICOS",
          "Delmonicos."
        ],
        "to": "Delmonicos"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park",
          "Gramercy Park Hotel  Hotel Gramercy Park",
          "Gramercy Park hotel"
        ],
        "to": "Gramercy Park Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL KNICKERBOCKER",
          "Hotel Knickerbocker",
          "HOTEL KNICKERBOCKER    ",
          "Knickerbocker Hotel"
        ],
        "to": "HOTEL KNICKERBOCKER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Waldorf-Astoria",
          "WALDORF-ASTORIA",
          " WALDORF-ASTORIA  ",
          " WALDORF-ASTORIA "
        ],
        "to": "Waldorf-Astoria"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BRISTOL HOTEL",
          "Hotel Bristol",
          "Bristol Hotel",
          "HOTEL BRISTOL"
        ],
        "to": "BRISTOL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Majestic",
          "HOTEL MAJESTIC",
          " MAJESTIC HOTEL ",
          "MAJESTIC HOTEL"
        ],
        "to": "Hotel Majestic"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLONIAL HOTEL",
          "HOTEL COLONIAL",
          "  COLONIAL HOTEL  ",
          " COLONIAL HOTEL "
        ],
        "to": "COLONIAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL",
          "Hotel Savoy",
          "Savoy Hotel"
        ],
        "to": "HOTEL SAVOY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL JEFFERSON",
          "Hotel Jefferson",
          "JEFFERSON HOTEL",
          "Jefferson Hotel"
        ],
        "to": "HOTEL JEFFERSON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DEL CORONADO HOTEL",
          "HOTEL DEL CORONADO",
          "Hotel Del Coronado",
          "Hotel del Coronado"
        ],
        "to": "DEL CORONADO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis",
          "ST, DENIS HOTEL",
          "ST. DENIS HOTEL"
        ],
        "to": "St. Denis Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MARIE ANTOINETTE",
          "MARIE ANTOINETTE HOTEL",
          "Hotel Marie Antoinette",
          "Marie Antoinette Hotel"
        ],
        "to": "HOTEL MARIE ANTOINETTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Imperial",
          "IMPERIAL HOTEL",
          "Imperial Hotel",
          "HOTEL IMPERIAL"
        ],
        "to": "Hotel Imperial"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BALTIMORE HOTEL",
          "HOTEL BALTIMORE",
          "Hotel  Baltimore",
          "Hotel Baltimore"
        ],
        "to": "BALTIMORE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Childs",
          "CHILDS'",
          "Child's"
        ],
        "to": "Childs"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL METROPOLE",
          "METROPOLE HOTEL",
          "Hotel Metropole"
        ],
        "to": "HOTEL METROPOLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORDEUTSCHER LLOYD BREMEN",
          "NORDEUTSCHER LLOYD, BREMEN",
          "NORDEUTSCHER LLOYD - BREMEN"
        ],
        "to": "NORDEUTSCHER LLOYD BREMEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALTA VISTA HOTEL",
          " ALTA VISTA HOTEL ",
          "ALTA VISTA HOTEL    "
        ],
        "to": "ALTA VISTA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE. GLE. TRANSATLANTIQUE",
          "Cie Gle TRANSATLANTIQUE"
        ],
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Laurel In The Pines",
          "LAUREL IN THE PINES",
          "Laurel in the Pines"
        ],
        "to": "Laurel In The Pines"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " ENGINEERS CLUB ",
          "ENGINEERS CLUB",
          "ENGINEERS' CLUB"
        ],
        "to": " ENGINEERS CLUB "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Manhattan",
          "HOTEL MANHATTAN",
          "MANHATTAN HOTEL"
        ],
        "to": "Hotel Manhattan"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HAMBURG AMERIKA LINIE",
          "HAMBURG - AMERIKA LINIE",
          "HAMBURG- AMERIKA LINIE"
        ],
        "to": "HAMBURG AMERIKA LINIE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL COLORADO",
          "COLORADO HOTEL",
          "Hotel Colorado"
        ],
        "to": "HOTEL COLORADO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Cosmopolitan Hotel",
          "COSMOPOLITAN HOTEL",
          "Cosmopolitan.. Hotel"
        ],
        "to": "Cosmopolitan Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "to": "Riggs'"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT "
        ],
        "to": "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Sherry's",
          "SHERRY'S",
          "Sherrys"
        ],
        "to": "Sherry's"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Schwarzwalders Natur Weinhaus",
          "SCHWARZWALDER'S NATUR WEINHAUS",
          "Schwarzwalder's Natur Weinhaus"
        ],
        "to": "Schwarzwalders Natur Weinhaus"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL CHAMBERLIN",
          "Hotel Chamberlin",
          "CHAMBERLIN HOTEL"
        ],
        "to": "HOTEL CHAMBERLIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE",
          " RED STAR LINE ",
          "RED STAR LINE -"
        ],
        "to": "RED STAR LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. REGIS HOTEL",
          "HOTEL ST. REGIS",
          "Hotel St. Regis"
        ],
        "to": "ST. REGIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. CHARLES HOTEL",
          "St. Charles Hotel",
          "St Charles Hotel"
        ],
        "to": "ST. CHARLES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Waldorf Astoria",
          "WALDORF ASTORIA",
          "WALDORF- ASTORIA"
        ],
        "to": "Waldorf Astoria"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S.",
          "USMS",
          "U.S.M.S"
        ],
        "to": "U.S.M.S."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S. NEW YORK",
          "USMS NEW YORK",
          "U.S.M.S NEW YORK"
        ],
        "to": "U.S.M.S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " MANHATTAN CLUB ",
          "Manhattan Club",
          "MANHATTAN CLUB"
        ],
        "to": " MANHATTAN CLUB "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MARLBOROUGH",
          "Hotel Marlborough",
          "Hotel Marlborough "
        ],
        "to": "HOTEL MARLBOROUGH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Lafayette Hotel",
          "HOTEL LAFAYETTE",
          "Hotel Lafayette"
        ],
        "to": "Lafayette Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DENNIS",
          "DENNIS HOTEL",
          "Hotel Dennis"
        ],
        "to": "HOTEL DENNIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "South Ferry Hotel",
          " South Ferry Hotel",
          "SOUTH FERRY HOTEL"
        ],
        "to": "South Ferry Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "to": "The Merchant's Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Union Club",
          "UNION CLUB",
          " UNION CLUB "
        ],
        "to": "Union Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \"Queen Mary\"\"\"",
          "R.M.S.  Queen  Mary \"\"",
          "R.M.S.  Queen Mary \"\""
        ],
        "to": "R.M.S. \"Queen Mary\"\"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLAREMONT HOTEL",
          "HOTEL CLAREMONT",
          "Hotel Claremont"
        ],
        "to": "CLAREMONT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCHANTS' CLUB",
          "Merchant's Club",
          "Merchants Club"
        ],
        "to": "MERCHANTS' CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL CHAMPLAIN",
          "CHAMPLAIN HOTEL",
          "Hotel Champlain"
        ],
        "to": "HOTEL CHAMPLAIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WINDSOR HOTEL",
          "HOTEL WINDSOR",
          "Windsor Hotel"
        ],
        "to": "WINDSOR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TOYO KISEN KAISHA - HONG KONG MARU",
          "TOYO KISEN KAISHA - HONG KONG  MARU",
          "TOYO KISEN KAISHA -HONG KONG MARU"
        ],
        "to": "TOYO KISEN KAISHA - HONG KONG MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHANLEY'S",
          "Shanley's",
          "SHANLEYS"
        ],
        "to": "SHANLEY'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRAUNCES' TAVERN",
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "to": "FRAUNCES' TAVERN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST. GEORGE",
          "Hotel St. George",
          "ST. GEORGE HOTEL"
        ],
        "to": "HOTEL ST. GEORGE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Plaza",
          "Plaza Hotel",
          "PLAZA HOTEL"
        ],
        "to": "Hotel Plaza"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMERICAN MEDICAL EDITORS' ASSOCIATION",
          "AMERICAN MEDICAL EDITOR'S ASSOCIATION",
          "AMERICAN MEDICAL EDITORS ASSOCIATION"
        ],
        "to": "AMERICAN MEDICAL EDITORS' ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Pontchartrain",
          "PONTCHARTRAIN HOTEL",
          "Pontchartrain Hotel"
        ],
        "to": "Hotel Pontchartrain"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION LEAGUE CLUB",
          "Union League Club",
          " UNION LEAGUE CLUB "
        ],
        "to": "UNION LEAGUE CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WESTMINSTER HOTEL",
          "HOTEL WESTMINSTER",
          "Hotel Westminster"
        ],
        "to": "WESTMINSTER HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME AND PROFILE HOUSE",
          "PROFILE HOUSE  AND HOTEL VENDOME",
          "PROFILE HOUSE AND HOTEL VENDOME"
        ],
        "to": "HOTEL VENDOME AND PROFILE HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ARLINGTON HOTEL",
          "ARLINGTON hOTEL"
        ],
        "to": "ARLINGTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "METROPOLITAN LIFE INSURANCE COMPANY",
          "Metropolitan Life Insurance Company"
        ],
        "to": "METROPOLITAN LIFE INSURANCE COMPANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA -S.S.KOBE MARU"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S.KOBE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA HOTEL",
          "Waldorf-Astoria Hotel"
        ],
        "to": "WALDORF-ASTORIA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Auditorium Hotel",
          "AUDITORIUM HOTEL"
        ],
        "to": "Auditorium Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. American Shipper",
          "S.S. \"American Shipper\"\"\""
        ],
        "to": "S.S. American Shipper"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK CLUB",
          "New York Club"
        ],
        "to": "NEW YORK CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Herald Square Hotel",
          "HERALD SQUARE HOTEL"
        ],
        "to": "Herald Square Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KASUGA",
          "NIPPON YUSEN KAISHA -S.S.KASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S.KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP COMPANY - SONOMA",
          "OCEANIC STEAMSHIP COMPANY _ SONOMA"
        ],
        "to": "OCEANIC STEAMSHIP COMPANY - SONOMA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE MERCHANT'S CLUB OF CHICAGO",
          "THE MERCHANTS CLUB OF CHICAGO"
        ],
        "to": "THE MERCHANT'S CLUB OF CHICAGO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Wabash  Railway Company ",
          "Wabash Railway Company"
        ],
        "to": "Wabash  Railway Company "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Alexandria",
          "HOTEL ALEXANDRIA"
        ],
        "to": "Hotel Alexandria"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE GRIDIRON CLUB",
          "The Gridiron Club"
        ],
        "to": "THE GRIDIRON CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST PATRICK"
        ],
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHAMBER OF COMMERCE",
          "Chamber of Commerce"
        ],
        "to": "CHAMBER OF COMMERCE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DE L'ANGE HOTEL",
          "HOTEL DE L'ANGE"
        ],
        "to": "DE L'ANGE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "to": "Rigg's Twentieth Street Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KING FREDERIK VIII",
          " KING FREDERIK VIII "
        ],
        "to": "KING FREDERIK VIII"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOLLAND-AMERICA LINE",
          "Holland-America Line"
        ],
        "to": "HOLLAND-AMERICA LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "QUILL CLUB",
          "Quill Club"
        ],
        "to": "QUILL CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Unknown",
          "unknown"
        ],
        "to": "Unknown"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS",
          "ANCIENT AND HONORABLE ARTILLERY CO. OF MASSACHUSETTS"
        ],
        "to": "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "to": "The New Willard Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOLLAND HOUSE",
          "Holland House"
        ],
        "to": "HOLLAND HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP CO. - SIERRA",
          "OCEANIC STEAMSHIP CO.- SIERRA"
        ],
        "to": "OCEANIC STEAMSHIP CO. - SIERRA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. Francis Hotel",
          "Hotel St. Francis"
        ],
        "to": "St. Francis Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK",
          "SOCIETY OF THE SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
        ],
        "to": "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " KING ALEXANDER OF SERVIA ",
          "KING ALEXANDER OF SERVIA"
        ],
        "to": " KING ALEXANDER OF SERVIA "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ASSOCIATION OF NEW YORK CITY",
          " HOTEL ASSOCIATION OF NEW YORK CITY "
        ],
        "to": "HOTEL ASSOCIATION OF NEW YORK CITY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHILDS' LUNCH ROOMS",
          "CHILD'S LUNCH ROOMS"
        ],
        "to": "CHILDS' LUNCH ROOMS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP CO. - S.S.ZEALANDIA",
          "OCEANIC STEAMSHIP CO. S.S.ZEALANDIA"
        ],
        "to": "OCEANIC STEAMSHIP CO. - S.S.ZEALANDIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Healy's Forty-second Street restaurant",
          "Healy's Forty-second Street Restaurant"
        ],
        "to": "Healy's Forty-second Street restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REPUBLICAN CLUB OF THE CITY OF NEW YORK",
          "Republican Club of the City of New York"
        ],
        "to": "REPUBLICAN CLUB OF THE CITY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VICTORY",
          "VICTORY HOTEL"
        ],
        "to": "HOTEL VICTORY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "  CLUB",
          " CLUB "
        ],
        "to": "  CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Paquebot Liberte",
          "Paquebot  Liberte \"\""
        ],
        "to": "Paquebot Liberte"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL GRUNEWALD",
          "GRUNEWALD HOTEL"
        ],
        "to": "HOTEL GRUNEWALD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ALGAZAR",
          "ALGAZAR HOTEL"
        ],
        "to": "HOTEL ALGAZAR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL CENTRAL",
          "Grand Hotel Central"
        ],
        "to": "GRAND HOTEL CENTRAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Fairmont Hotel",
          "Hotel Fairmont"
        ],
        "to": "Fairmont Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Louis Sherry",
          "LOUIS SHERRY"
        ],
        "to": "Louis Sherry"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALCAZAR HOTEL",
          "HOTEL ALCAZAR"
        ],
        "to": "ALCAZAR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LOTOS CLUB",
          "Lotos Club"
        ],
        "to": "LOTOS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. NICHOLAS HOTEL",
          "Hotel St. Nicholas"
        ],
        "to": "ST. NICHOLAS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHATEAU FRONTENAC",
          "Chateau Frontenac"
        ],
        "to": "CHATEAU FRONTENAC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CASINO CENTRAL PARK",
          "Casino   Central Park"
        ],
        "to": "CASINO CENTRAL PARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Union Pacific  Railroad",
          "Union Pacific Railroad"
        ],
        "to": "Union Pacific  Railroad"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TOURO CLUB",
          "Touro Club"
        ],
        "to": "TOURO CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLOMBO HOTEL",
          "HOTEL COLOMBO"
        ],
        "to": "COLOMBO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " MAHARAJA OF BARODA ",
          "MAHARAJA OF BARODA"
        ],
        "to": " MAHARAJA OF BARODA "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Palace Hotel",
          "PALACE HOTEL"
        ],
        "to": "Palace Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL HUNGARIA",
          "Grand Hotel Hungaria"
        ],
        "to": "GRAND HOTEL HUNGARIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANCIENT ACCEPTED SCOTTISH RITE",
          "ANCIENT & ACCEPTED SCOTTISH RITE"
        ],
        "to": "ANCIENT ACCEPTED SCOTTISH RITE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.H. MACY & CO.",
          "R.H. Macy & Co."
        ],
        "to": "R.H. MACY & CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP COMPANY -S.S.ZEALANDER",
          "OCEANIC STEAMSHIP COMPANY - S.S.ZEALANDER"
        ],
        "to": "OCEANIC STEAMSHIP COMPANY -S.S.ZEALANDER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Pirate's House",
          "Pirates' House"
        ],
        "to": "Pirate's House"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION",
          "MICHIGAN SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "to": "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCHANT'S CLUB OF BOSTON",
          "MERCHANTS' CLUB OF BOSTON"
        ],
        "to": "MERCHANT'S CLUB OF BOSTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORTHERN PACIFIC RAILWAY",
          "Northern Pacific Railway"
        ],
        "to": "NORTHERN PACIFIC RAILWAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARK AVENUE HOTEL",
          "Park Avenue Hotel"
        ],
        "to": "PARK AVENUE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WASHINGTON",
          "Hotel Washington"
        ],
        "to": "HOTEL WASHINGTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHERMAN SQUARE HOTEL",
          "Sherman Square Hotel"
        ],
        "to": "SHERMAN SQUARE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SECOND PANEL SHERIFF'S JURY",
          "SHERIFF'S JURY SECOND PANEL"
        ],
        "to": "SECOND PANEL SHERIFF'S JURY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "to": "Elks Club House"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Masonic Temple",
          "MASONIC TEMPLE"
        ],
        "to": "Masonic Temple"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DU MUSEE",
          "HOTEL DU MUSEE'"
        ],
        "to": "HOTEL DU MUSEE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Astor House",
          "ASTOR HOUSE"
        ],
        "to": "Astor House"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - S.S.WESTERNLAND",
          "RED STAR LINE S.S.WESTERNLAND"
        ],
        "to": "RED STAR LINE - S.S.WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Tavern On The Green",
          "The Tavern On The Green"
        ],
        "to": "Tavern On The Green"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Congress Hotel",
          "CONGRESS HOTEL"
        ],
        "to": "Congress Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MINOT",
          "MINOT HOTEL"
        ],
        "to": "HOTEL MINOT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MURRAY HILL HOTEL",
          "Murray Hill Hotel"
        ],
        "to": "MURRAY HILL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Park Lane",
          "Park lane"
        ],
        "to": "Park Lane"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " Restaurant And/Or Location Not Given. ",
          " Restaurant And/Or Location Not Given "
        ],
        "to": " Restaurant And/Or Location Not Given. "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S New Amsterdam",
          "S.S. New Amsterdam"
        ],
        "to": "S.S New Amsterdam"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "JOHN WANAMAKER",
          "John Wanamaker"
        ],
        "to": "JOHN WANAMAKER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ambassador Hotel",
          "Hotel Ambassador"
        ],
        "to": "Ambassador Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " PRIVATE ",
          "PRIVATE"
        ],
        "to": " PRIVATE "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Commodore Hotel",
          "The Hotel Commodore"
        ],
        "to": "The Commodore Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Algonquin Hotel",
          "Hotel Algonquin"
        ],
        "to": "Algonquin Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Worthy",
          "WORTHY HOTEL"
        ],
        "to": "Hotel Worthy"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WILLARD'S HOTEL",
          "WILLARDS HOTEL"
        ],
        "to": "WILLARD'S HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Grand Ballroom Of The Hotel Plaza",
          "The Grand Ballroom Of The Hotel Plaza"
        ],
        "to": "Grand Ballroom Of The Hotel Plaza"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. - S.S.ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO.- S.S.ATHABASCA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. - S.S.ATHABASCA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CENTURY CLUB",
          " CENTURY CLUB  "
        ],
        "to": "CENTURY CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "to": "Hotel Astor"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ANNEX",
          "The Annex"
        ],
        "to": "THE ANNEX"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " EMPEROR NICHOLAS II",
          "EMPEROR NICHOLAS II"
        ],
        "to": " EMPEROR NICHOLAS II"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Eastern Hotel",
          "EASTERN HOTEL"
        ],
        "to": "Eastern Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Somerset",
          "HOTEL SOMERSET"
        ],
        "to": "Hotel Somerset"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "to": "Grocers Hall"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CONTINENTAL HOTEL",
          "HOTEL CONTINENTAL"
        ],
        "to": "CONTINENTAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE WINDSOR",
          "The Windsor"
        ],
        "to": "THE WINDSOR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LACKAWANNA RAILROAD",
          "Lackawanna Railroad"
        ],
        "to": "LACKAWANNA RAILROAD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Mercantile Lunch Co.",
          "Mercantile lunch Co."
        ],
        "to": "Mercantile Lunch Co."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CARLTON CLUB",
          "Carlton Club"
        ],
        "to": "CARLTON CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New York Central System",
          " New York Central System "
        ],
        "to": "New York Central System"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE.",
          " NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE. "
        ],
        "to": "NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WISCONSIN SOCIETY - SONS OF THE AMERICAN REVOLUTION",
          "WISCONSIN SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "to": "WISCONSIN SOCIETY - SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KING EDWARD VII",
          " KING EDWARD VII "
        ],
        "to": "KING EDWARD VII"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL NETHERLAND",
          "NETHERLAND HOTEL"
        ],
        "to": "HOTEL NETHERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST.REGIS HOTEL",
          "HOTEL ST.REGIS"
        ],
        "to": "ST.REGIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI",
          "SOCIETY SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
        ],
        "to": "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New York Athletic Club",
          "NEW YORK ATHLETIC CLUB"
        ],
        "to": "New York Athletic Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "YALE UNIVERSITY",
          "Yale University"
        ],
        "to": "YALE UNIVERSITY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE GOLDEN PHEASANT",
          "The Golden Pheasant"
        ],
        "to": "THE GOLDEN PHEASANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Don The Beachcomber",
          "Don the Beachcomber"
        ],
        "to": "Don The Beachcomber"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL EMPIRE",
          "EMPIRE HOTEL"
        ],
        "to": "HOTEL EMPIRE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Reuben's",
          "Reuben's."
        ],
        "to": "Reuben's"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Paquebot  France \"\"",
          "Paquebot France"
        ],
        "to": "Paquebot  France \"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROYAL PALM HOTEL",
          "HOTEL ROYAL PALM"
        ],
        "to": "ROYAL PALM HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL LINCOLN",
          "Hotel Lincoln"
        ],
        "to": "HOTEL LINCOLN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " ENGLISH HOTEL RESTAURANT ",
          "ENGLISH HOTEL RESTAURANT"
        ],
        "to": " ENGLISH HOTEL RESTAURANT "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "George Washington Hotel",
          "Hotel George Washington"
        ],
        "to": "George Washington Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.G.   ",
          "RG"
        ],
        "to": "R.G.   "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLUMBIA HOTEL",
          "HOTEL COLUMBIA"
        ],
        "to": "COLUMBIA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Brooklyn Club",
          "BROOKLYN CLUB"
        ],
        "to": "Brooklyn Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. OCEANIC",
          "RMS OCEANIC"
        ],
        "to": "R.M.S. OCEANIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel DuPont",
          "Hotel duPont"
        ],
        "to": "Hotel DuPont"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW GRAND HOTEL",
          "GRAND NEW HOTEL"
        ],
        "to": "NEW GRAND HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Hotel Plaza",
          "The Plaza Hotel"
        ],
        "to": "The Hotel Plaza"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "XIII CLUB",
          "CLUB XIII"
        ],
        "to": "XIII CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION",
          "EMPIRE STATE SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "to": "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMMERCIAL CLUB",
          "Commercial Club"
        ],
        "to": "COMMERCIAL CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PALACE HOTEL RESTAURANT",
          "Palace Hotel Restaurant"
        ],
        "to": "PALACE HOTEL RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Pennsylvania",
          "Pennsylvania Hotel"
        ],
        "to": "Hotel Pennsylvania"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. Parthia",
          "R.M.S. \"Parthia\"\"\""
        ],
        "to": "R.M.S. Parthia"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S.  Queen Elizabeth \"\"",
          "R.M.S.  Queen  Elizabeth \"\""
        ],
        "to": "R.M.S.  Queen Elizabeth \"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Oriental",
          "THE ORIENTAL"
        ],
        "to": "The Oriental"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Great Northern Railway",
          "GREAT NORTHERN RAILWAY"
        ],
        "to": "Great Northern Railway"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE LINCOLN CLUB",
          "The Lincoln Club"
        ],
        "to": "THE LINCOLN CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MOUQUIN RESTAURANT AND WINE CO",
          "MOUQUIN RESTAURANT AND WINE CO."
        ],
        "to": "MOUQUIN RESTAURANT AND WINE CO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Imperial",
          "IMPERIAL    "
        ],
        "to": "Imperial"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Guffanti's Table d'Hôte",
          "Guffanti's Table d'Hôte "
        ],
        "to": "Guffanti's Table d'Hôte"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK YACHT CLUB",
          "New York Yacht Club"
        ],
        "to": "NEW YORK YACHT CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. Minnetonka",
          "S.S. \"Minnetonka\"\"\""
        ],
        "to": "S.S. Minnetonka"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Commodore",
          "Commodore Hotel"
        ],
        "to": "Hotel Commodore"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ALDINE CLUB",
          "The Aldine Club"
        ],
        "to": "THE ALDINE CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " Not Given ",
          " Not given "
        ],
        "to": " Not Given "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "USMS ST LOUIS",
          "U.S.M.S. ST. LOUIS"
        ],
        "to": "USMS ST LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Winthrop",
          "Winthrop Hotel"
        ],
        "to": "Hotel Winthrop"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Meyer's Hotel",
          "MEYERS HOTEL"
        ],
        "to": "Meyer's Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SCHENLEY",
          "Hotel Schenley"
        ],
        "to": "HOTEL SCHENLEY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " 238 EIGHT AVENUE ",
          "238 EIGHT AVENUE"
        ],
        "to": " 238 EIGHT AVENUE "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PHONIX",
          "PHONIX HOTEL"
        ],
        "to": "HOTEL PHONIX"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Harvard Club",
          " HARVARD CLUB "
        ],
        "to": "Harvard Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Aldine Club",
          "ALDINE CLUB"
        ],
        "to": "Aldine Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel St. Andrew",
          "HOTEL ST. ANDREW"
        ],
        "to": "Hotel St. Andrew"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ye Olde Dutch Tavern",
          "YE OLDE DUTCH TAVERN"
        ],
        "to": "Ye Olde Dutch Tavern"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MAPLEWOOD HOTEL",
          "Maplewood Hotel"
        ],
        "to": "MAPLEWOOD HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MCNELLS"
        ],
        "to": "SMITH & MCNELL'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel d'Angleterre",
          "D'ANGLETERRE HOTEL"
        ],
        "to": "Hotel d'Angleterre"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELLICOTT CLUB",
          "Ellicott Club"
        ],
        "to": "ELLICOTT CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMERICAN LEGATION",
          " AMERICAN LEGATION "
        ],
        "to": "AMERICAN LEGATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PLANTERS HOTEL",
          "Planters Hotel"
        ],
        "to": "PLANTERS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RESTAURANT WALTERSPIEL",
          "Restaurant Walterspiel"
        ],
        "to": "RESTAURANT WALTERSPIEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Sphinx Club",
          "SPHINX CLUB"
        ],
        "to": "Sphinx Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAFE BOULEVARD",
          "Cafe Boulevard"
        ],
        "to": "CAFE BOULEVARD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Plaza",
          "THE PLAZA"
        ],
        "to": "The Plaza"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADWAY CENTRAL HOTEL",
          "Broadway Central Hotel"
        ],
        "to": "BROADWAY CENTRAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK PRESS CLUB",
          "New York Press Club"
        ],
        "to": "NEW YORK PRESS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DENNETT'S",
          "Dennett's"
        ],
        "to": "DENNETT'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S.  Mauretania \"\"",
          "R.M.S. Mauretania"
        ],
        "to": "R.M.S.  Mauretania \"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "QUEEN'S HOTEL",
          "Queen's Hotel"
        ],
        "to": "QUEEN'S HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Met-Life Building",
          "MetLife Building"
        ],
        "to": "Met-Life Building"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION SQUARE HOTEL",
          "Union Square Hotel"
        ],
        "to": "UNION SQUARE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. \"Frederik VIII\"",
          "S.S. Frederik VIII"
        ],
        "to": "S.S. \"Frederik VIII\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ballroom, The Plaza",
          "The Plaza   Ballroom"
        ],
        "to": "Ballroom, The Plaza"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Metropolitan Club",
          "METROPOLITAN CLUB"
        ],
        "to": "Metropolitan Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENZIES HOTEL",
          "MENZIE'S HOTEL"
        ],
        "to": "MENZIES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "University Club",
          "UNIVERSITY CLUB"
        ],
        "to": "University Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMERICAN BANKERS ASSOCIATION",
          "AMERICAN BANKERS' ASSOCIATION"
        ],
        "to": "AMERICAN BANKERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " KING UMBERTO ",
          "KING UMBERTO"
        ],
        "to": " KING UMBERTO "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KING HAAKON VII",
          " KING HAAKON VII "
        ],
        "to": "KING HAAKON VII"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Del Monte",
          "HOTEL DEL MONTE"
        ],
        "to": "Hotel Del Monte"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Brevoort Restaurant",
          "RESTAURANT BREVOORT"
        ],
        "to": "Brevoort Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Walton's Old Homestead Oyster and Chop House",
          "WALTON'S OLD HOMESTEAD OYSTER AND CHOP HOUSE"
        ],
        "to": "Walton's Old Homestead Oyster and Chop House"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP COMPANY - SIERRA",
          "OCEANIC STEAMSHIP COMPANY -SIERRA"
        ],
        "to": "OCEANIC STEAMSHIP COMPANY - SIERRA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. \"Ile De France\"\"\"",
          "S.S. Ile De France"
        ],
        "to": "S.S. \"Ile De France\"\"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MASTER PRINTERS ASSOCIATION",
          "MASTER PRINTERS' ASSOCIATION"
        ],
        "to": "MASTER PRINTERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Restaurant Mayan",
          "Mayan Restaurant"
        ],
        "to": "Restaurant Mayan"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "El Morocco",
          "el Morocco"
        ],
        "to": "El Morocco"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REVERE HOUSE",
          "Revere House"
        ],
        "to": "REVERE HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA",
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES.  COMMANDERY OF THE STATE OF MINNESOTA"
        ],
        "to": "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "to": "Adams' Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK",
          "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
        ],
        "to": "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRENOBLE HOTEL",
          "HOTEL GRENOBLE"
        ],
        "to": "GRENOBLE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " The Manor \"\"",
          "The Manor"
        ],
        "to": " The Manor \"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PENN. RR - PULLMAN DINING CAR SERVICE",
          "PENN RR - PULLMAN DINING CAR SERVICE"
        ],
        "to": "PENN. RR - PULLMAN DINING CAR SERVICE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SANTA FE ROUTE",
          "SANTA FE' ROUTE"
        ],
        "to": "SANTA FE ROUTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " HARVARD UNIVERSITY ",
          "HARVARD UNIVERSITY"
        ],
        "to": " HARVARD UNIVERSITY "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALPHA KAPPA KAPPA",
          "KAPPA ALPHA"
        ],
        "to": "ALPHA KAPPA KAPPA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "La Canzone Del Mare",
          "La Canzone del Mare"
        ],
        "to": "La Canzone Del Mare"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Fred Harvey",
          "FRED HARVEY"
        ],
        "to": "Fred Harvey"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Mouquin Restaurant and Wine Co.",
          "The Mouquin Restaurant And Wine Co."
        ],
        "to": "The Mouquin Restaurant and Wine Co."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL NATIONAL",
          "NATIONAL HOTEL"
        ],
        "to": "HOTEL NATIONAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ARION",
          "Arion"
        ],
        "to": "ARION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Parker House",
          "PARKER HOUSE"
        ],
        "to": "Parker House"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL QUISISANA",
          "QUISISANA HOTEL"
        ],
        "to": "HOTEL QUISISANA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " FIFTH AVE. HOTEL ",
          "FIFTH AVE. HOTEL"
        ],
        "to": " FIFTH AVE. HOTEL "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Maxim's",
          "MAXIM'S"
        ],
        "to": "Maxim's"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New York Central System, Boston & Albany Railroad",
          "Boston & Albany Railroad , New York Central System"
        ],
        "to": "New York Central System, Boston & Albany Railroad"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Copley Plaza Hotel",
          "Hotel Copley Plaza"
        ],
        "to": "Copley Plaza Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITHVILLE INN",
          "Smithville Inn"
        ],
        "to": "SMITHVILLE INN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROWN PALACE HOTEL",
          "Brown Palace Hotel"
        ],
        "to": "BROWN PALACE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OLD GUARD ALBANY ZOUAVE CADETS",
          "ALBANY ZOUAVE CADETS - OLD GUARD"
        ],
        "to": "OLD GUARD ALBANY ZOUAVE CADETS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. GEORGE'S SOCIETY",
          "ST. GEORGES SOCIETY"
        ],
        "to": "ST. GEORGE'S SOCIETY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SAN REMO HOTEL",
          "HOTEL SAN REMO"
        ],
        "to": "SAN REMO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CRAWFORD HOUSE",
          "Crawford House"
        ],
        "to": "CRAWFORD HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Rathskeller",
          "RATHSKELLER"
        ],
        "to": "Rathskeller"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RECTOR'S",
          "Rector's"
        ],
        "to": "RECTOR'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BANKERS' CLUB OF CHICAGO",
          "BANKERS CLUB OF CHICAGO"
        ],
        "to": "BANKERS' CLUB OF CHICAGO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL",
          "Grand Hotel"
        ],
        "to": "GRAND HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MACY'S",
          "Macy's"
        ],
        "to": "MACY'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.NASUGA",
          "NIPPON YUSEN KAISHA -S.S.NASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S.NASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " KING CHRISTIAN IX OF DENMARK ",
          "KING CHRISTIAN IX OF DENMARK"
        ],
        "to": " KING CHRISTIAN IX OF DENMARK "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNITED STATES HOTEL",
          "United States Hotel"
        ],
        "to": "UNITED STATES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Oustau De Baumaniere",
          "Oustau de Baumaniere"
        ],
        "to": "Oustau De Baumaniere"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAFETERIA LUNCH",
          "CAFETERIA - LUNCH"
        ],
        "to": "CAFETERIA LUNCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Ritz",
          "HOTEL RITZ"
        ],
        "to": "Hotel Ritz"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PINE FOREST INN",
          "Pine Forest Inn"
        ],
        "to": "PINE FOREST INN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL ROYAL",
          "Royal Grand Hotel"
        ],
        "to": "GRAND HOTEL ROYAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEANIC STEAMSHIP CO. - SONOMA",
          "OCEANIC STEAMSHIP CO. _ SONOMA"
        ],
        "to": "OCEANIC STEAMSHIP CO. - SONOMA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA",
          "THE ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
        ],
        "to": "ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MANSION HOUSE",
          "Mansion House"
        ],
        "to": "MANSION HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COTILLION CLUB",
          "Cotillion Club"
        ],
        "to": "COTILLION CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CORTELYOU CLUB",
          "Cortelyou Club"
        ],
        "to": "CORTELYOU CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Washington",
          "THE WASHINGTON"
        ],
        "to": "The Washington"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "YORK HOTEL",
          "HOTEL YORK"
        ],
        "to": "YORK HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE PORTLAND",
          "The Portland"
        ],
        "to": "THE PORTLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NATIONAL WHOLESALE  DRUGGISTS' ASSOCIATION",
          "NATIONAL WHOLESALE DRUGGISTS' ASSOCIATION"
        ],
        "to": "NATIONAL WHOLESALE  DRUGGISTS' ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Royal",
          "ROYAL HOTEL"
        ],
        "to": "Hotel Royal"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME",
          "VENDOME HOTEL"
        ],
        "to": "HOTEL VENDOME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE TRANSATLANTIQUE",
          "CIE CIE TRANSATLANTIQUE"
        ],
        "to": "CIE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "US ARMY - SUBSISTENCE DEPT.",
          "U.S. ARMY - SUBSISTENCE DEPT."
        ],
        "to": "US ARMY - SUBSISTENCE DEPT."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Red Coach Grill",
          "RED COACH GRILL"
        ],
        "to": "Red Coach Grill"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Martinique",
          "MARTINIQUE HOTEL"
        ],
        "to": "Hotel Martinique"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel New Weston",
          "New Weston Hotel"
        ],
        "to": "Hotel New Weston"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUFFALO CLUB",
          "Buffalo Club"
        ],
        "to": "BUFFALO CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Copley-Plaza Hotel",
          "Hotel Copley-Plaza"
        ],
        "to": "Copley-Plaza Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KINSHIN MARU",
          "NIPPON YUSEN KAISHA -S.S.KINSHIN MARU"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S.KINSHIN MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Victoria",
          "Victoria Hotel"
        ],
        "to": "Hotel Victoria"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PONCE DE LEON HOTEL",
          "HOTEL PONCE DE LEON"
        ],
        "to": "PONCE DE LEON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Plaza",
          "PLAZA"
        ],
        "to": "Plaza"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " AMERICAN LINE ",
          "American Line"
        ],
        "to": " AMERICAN LINE "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Maplewood",
          "THE MAPLEWOOD"
        ],
        "to": "The Maplewood"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Lexington",
          "Lexington Hotel"
        ],
        "to": "Hotel Lexington"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL REVELSTOKE",
          "REVELSTOKE HOTEL"
        ],
        "to": "HOTEL REVELSTOKE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S. KASUGA",
          "NIPPON YUSEN KAISHA -SS KASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S. KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "QUEEN CITY CLUB",
          "Queen City Club"
        ],
        "to": "QUEEN CITY CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ROANOKE",
          "ROANOKE HOTEL"
        ],
        "to": "HOTEL ROANOKE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Pennsylvania Railroad",
          "PENNSYLVANIA RAILROAD"
        ],
        "to": "Pennsylvania Railroad"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DES INDES HOTEL",
          "Hotel des Indes"
        ],
        "to": "DES INDES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Statler",
          "Statler Hotel"
        ],
        "to": "Hotel Statler"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. New York",
          "U.S.S. New York    "
        ],
        "to": "U.S.S. New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CRESCENT ATHLETIC CLUB",
          "Crescent Athletic Club"
        ],
        "to": "CRESCENT ATHLETIC CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Lotos Club",
          "THE LOTOS CLUB"
        ],
        "to": "The Lotos Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GALLATIN HOTEL",
          "HOTEL GALLATIN"
        ],
        "to": "GALLATIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOHEMIAN CLUB",
          "Bohemian Club"
        ],
        "to": "BOHEMIAN CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ENGLAND SHORTHAND REPORTER'S ASSOCIATION",
          "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION"
        ],
        "to": "NEW ENGLAND SHORTHAND REPORTER'S ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Hotel Astor   The Belvedere Room",
          "The Hotel Astor  The Belvedere Room"
        ],
        "to": "The Hotel Astor   The Belvedere Room"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Essex Hotel   The Colonnades",
          "The Essex Hotel The Colonnades"
        ],
        "to": "The Essex Hotel   The Colonnades"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HARVARD CLUB OF NEW YORK CITY",
          "Harvard Club Of New York City"
        ],
        "to": "HARVARD CLUB OF NEW YORK CITY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - S.S.FRIESLAND",
          "RED STAR LINE SS FRIESLAND",
          "RED STAR LINE-SS FRIESLAND"
        ],
        "to": "RED STAR LINE - S.S.FRIESLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. RALEIGH",
          "U.S.S.RALEIGH",
          "U.S.S.S.RALEIGH"
        ],
        "to": "U.S.S. RALEIGH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hofbrau Haus",
          "Hofbrauhaus",
          "Hof Brau Haus"
        ],
        "to": "Hofbrau Haus"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA - S.S. KOBE MARU",
          "NIPPPON YUSEN KAISHA - S.S. KOBE MARU"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S.KOBE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETA LA PIEMONTESE",
          "SOCIETA'LA PIEMONTESE"
        ],
        "to": "SOCIETA LA PIEMONTESE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel DuPont",
          "Hotel Du Pont"
        ],
        "to": "Hotel DuPont"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.H. Meyer Rathskeller",
          "A.H.Meyer Rathskeller"
        ],
        "to": "A.H. Meyer Rathskeller"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KASUGA",
          "NIPPON YUSEN KAISHA - S.S. KASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S.KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LAUREL-IN-THE-PINES",
          "Laurel In The Pines"
        ],
        "to": "LAUREL-IN-THE-PINES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S. S. President Wilson",
          "S.S. President Wilson"
        ],
        "to": "S. S. President Wilson"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Bellevue - Stratford",
          "Bellevue-Stratford"
        ],
        "to": "Bellevue - Stratford"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "United Air Lines",
          "United Airlines"
        ],
        "to": "United Air Lines"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESAURANT AND CAFE",
          "FLATIRON RESAURANT AND CAFE"
        ],
        "to": "FLAT IRON RESAURANT AND CAFE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAFETERIA LUNCH",
          "CAFETERIA-LUNCH"
        ],
        "to": "CAFETERIA LUNCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Copley Plaza",
          "Copley-Plaza"
        ],
        "to": "Copley Plaza"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE.GLE. TRANSATLANTIQUE"
        ],
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Bellevue Stratford Hotel",
          "Bellevue-Stratford Hotel"
        ],
        "to": "Bellevue Stratford Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Bundeshaus Restaurant",
          "Bundeshausrestaurant"
        ],
        "to": "Bundeshaus Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BRITISH SCHOOLS AND UNIVERSITIES CLUB OF NEW YORK",
          "BRITISHSCHOOLS AND UNIVERSITIES CLUB OF NEW YORK"
        ],
        "to": "BRITISH SCHOOLS AND UNIVERSITIES CLUB OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. AMSTERDAM",
          "S.S.AMSTERDAM"
        ],
        "to": "S.S. AMSTERDAM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST.PATRICK"
        ],
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. - S.S. ALBERTA",
          "CANADIAN PACIFIC RAILWAY CO. - S.S.ALBERTA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. - S.S. ALBERTA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CUNARD LINE-R.M.S. PAVONIA",
          "CUNARD LINE R.M.S. PAVONIA"
        ],
        "to": "CUNARD LINE-R.M.S. PAVONIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - S.S. SOUTHWARK",
          "RED STAR LINE - S.S.SOUTHWARK"
        ],
        "to": "RED STAR LINE - S.S. SOUTHWARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. SAN FRANCISCO",
          "U.S.S.SAN FRANCISCO"
        ],
        "to": "U.S.S. SAN FRANCISCO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ROUND TABLE",
          "The Roundtable"
        ],
        "to": "THE ROUND TABLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. GEORGE'S SOCIETY OF NEW YORK",
          "ST.GEORGE'S SOCIETY OF NEW YORK"
        ],
        "to": "ST. GEORGE'S SOCIETY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENZIES HOTEL",
          "MENZIES'HOTEL"
        ],
        "to": "MENZIES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK STATE HOTEL ASSOCIATION",
          "NEW-YORK STATE HOTEL ASSOCIATION"
        ],
        "to": "NEW YORK STATE HOTEL ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUSINESS MEN'S LEAGUE OF ST. LOUIS",
          "BUSINESS MEN'S LEAGUE OF ST.LOUIS"
        ],
        "to": "BUSINESS MEN'S LEAGUE OF ST. LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Pig N'whistle",
          "Pig'n Whistle"
        ],
        "to": "Pig N'whistle"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. REGIS HOTEL",
          "ST.REGIS HOTEL"
        ],
        "to": "ST. REGIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - ANTWERPEN -NEW YORK",
          "RED STAR LINE ANTWERPEN-NEW YORK"
        ],
        "to": "RED STAR LINE - ANTWERPEN -NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. Wyoming",
          "U.S.S. Wyoming"
        ],
        "to": "U. S. S. Wyoming"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK",
          "SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
        ],
        "to": "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HAMBURG-AMERIKA LINIE",
          "HAMBURG AMERIKA LINIE"
        ],
        "to": "HAMBURG-AMERIKA LINIE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROGER'S RESTAURANT",
          "ROGERS'RESTAURANT"
        ],
        "to": "ROGER'S RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - S.S.WESTERNLAND",
          "RED STAR LINE - SS WESTERNLAND"
        ],
        "to": "RED STAR LINE - S.S.WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "O.D.",
          "O. D."
        ],
        "to": "O.D."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "B&O BLUE LINE",
          "B.& O. BLUE LINE"
        ],
        "to": "B&O BLUE LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK",
          "ST.ANDREWS SOCIETY OF THE STATE OF NEW YORK"
        ],
        "to": "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. - S.S. ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO. - S.S.ATHABASCA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. - S.S. ATHABASCA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel La Salle",
          "Hotel LaSalle"
        ],
        "to": "Hotel La Salle"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. Francis Hotel",
          "ST.FRANCIS HOTEL"
        ],
        "to": "St. Francis Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Waldorf Astoria",
          "The Waldorf-Astoria"
        ],
        "to": "The Waldorf Astoria"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MC NELLS"
        ],
        "to": "SMITH & MCNELL'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel McAlpin",
          "Hotel Mc Alpin"
        ],
        "to": "Hotel McAlpin"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SIEGEL COOPER CO.",
          "SIEGEL-COOPER CO."
        ],
        "to": "SIEGEL COOPER CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Copley-Plaza Hotel",
          "Copley Plaza Hotel"
        ],
        "to": "Copley-Plaza Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Simpson's In The Strand",
          "Simpson's-in-the-Strand"
        ],
        "to": "Simpson's In The Strand"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA - S.S.NASUGA",
          "NIPPON YUSEN KAISHA - S.S. NASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA - S.S.NASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TYN-Y-COED",
          "TYNY COED"
        ],
        "to": "TYN-Y-COED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. New York",
          "U.S.S. New York"
        ],
        "to": "U. S. S. New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. Florida",
          "U.S.S. Florida"
        ],
        "to": "U. S. S. Florida"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. America",
          "S.S.America"
        ],
        "to": "S.S. America"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESTAURANT & CAFE",
          "FLATIRON RESTAURANT & CAFE"
        ],
        "to": "FLAT IRON RESTAURANT & CAFE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S.PHILADELPHIA",
          "USMS PHILADELPHIA"
        ],
        "to": "U.S.M.S.PHILADELPHIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Dinner Menu, S. S. Vaderland, March 18th, 1910.",
          "Dinner Menu, S.S. Vaderland, March 18th, 1910."
        ],
        "to": "Dinner Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ritz Carlton Hotel",
          "Ritz-Carlton Hotel"
        ],
        "to": "Ritz Carlton Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Waldorf Astoria",
          "Waldorf-Astoria"
        ],
        "to": "Waldorf Astoria"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Cobble Stones",
          "The Cobblestones"
        ],
        "to": "The Cobble Stones"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. United States",
          "S. S. United States"
        ],
        "to": "S.S. United States"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ritz Carlton",
          "Ritz-Carlton"
        ],
        "to": "Ritz Carlton"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Café des Beaux Arts",
          "Café des Beaux-Arts"
        ],
        "to": "Café des Beaux Arts"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST.LOUIS CLUB",
          "ST. LOUIS CLUB"
        ],
        "to": "ST.LOUIS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESTAURANT",
          "Flatiron Restaurant"
        ],
        "to": "FLAT IRON RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " DOWN TOWN CLUB ",
          "DOWNTOWN CLUB"
        ],
        "to": " DOWN TOWN CLUB "
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE - ANTWERPEN - NY",
          "RED STAR LINE - ANTWERPEN.NY"
        ],
        "to": "RED STAR LINE - ANTWERPEN - NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. OCEANIC",
          "R.M.S.OCEANIC"
        ],
        "to": "R.M.S. OCEANIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CUNARD STEAM SHIP COMPANY LIMITED",
          "CUNARD STEAMSHIP COMPANY LIMITED"
        ],
        "to": "CUNARD STEAM SHIP COMPANY LIMITED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MC NELL",
          "SMITH & McNELL"
        ],
        "to": "SMITH & MC NELL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO STATIONERS ASSOCIATION",
          "CHICAGOS STATIONERS ASSOCIATION"
        ],
        "to": "CHICAGO STATIONERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROVINZIAL LIEDERTAFEL",
          "PROVINZIAL-LIEDERTAFEL"
        ],
        "to": "PROVINZIAL LIEDERTAFEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.W. DENNETT",
          "A.W.DENNETT"
        ],
        "to": "A.W. DENNETT"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Sponsor using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Sponsor",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Sponsor using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Sponsor",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Sponsor using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Sponsor",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Event 2 at index 4 based on column Event using expression jython:if value is None or not value:\n    return \"No Event\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Event 2",
    "columnInsertIndex": 4,
    "baseColumnName": "Event",
    "expression": "jython:if value is None or not value:\n    return \"No Event\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Event",
    "columnName": "Event"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Event 2 to Event",
    "oldColumnName": "Event 2",
    "newColumnName": "Event"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Event using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Event",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Event using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Event",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Event using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Event",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Venue 2 at index 5 based on column Venue using expression jython:if value is None or not value:\n    return \"No Venue\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Venue 2",
    "columnInsertIndex": 5,
    "baseColumnName": "Venue",
    "expression": "jython:if value is None or not value:\n    return \"No Venue\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Venue",
    "columnName": "Venue"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Venue 2 to Venue",
    "oldColumnName": "Venue 2",
    "newColumnName": "Venue"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Venue using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Venue",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Venue using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Venue",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Venue using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Venue",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Place 2 at index 6 based on column Place using expression jython:if value is None or not value:\n    return \"No Place\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Place 2",
    "columnInsertIndex": 6,
    "baseColumnName": "Place",
    "expression": "jython:if value is None or not value:\n    return \"No Place\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Place",
    "columnName": "Place"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Place 2 to Place",
    "oldColumnName": "Place 2",
    "newColumnName": "Place"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Place using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Place",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Place using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Place",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Place using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Place",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Occasion 2 at index 8 based on column Occasion using expression jython:if value is None or not value:\n    return \"---------\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Occasion 2",
    "columnInsertIndex": 8,
    "baseColumnName": "Occasion",
    "expression": "jython:if value is None or not value:\n    return \"---------\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Occasion",
    "columnName": "Occasion"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Occasion 2 to Occasion",
    "oldColumnName": "Occasion 2",
    "newColumnName": "Occasion"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Occasion using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Occasion",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Occasion using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Occasion",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Occasion using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Occasion",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Location 2 at index 14 based on column Location using expression jython:if value is None or not value:\n    return \"Not Provided\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Location 2",
    "columnInsertIndex": 14,
    "baseColumnName": "Location",
    "expression": "jython:if value is None or not value:\n    return \"Not Provided\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Location",
    "columnName": "Location"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Location 2 to Location",
    "oldColumnName": "Location 2",
    "newColumnName": "Location"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Location using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Location",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Location using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Location using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Location",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Currency 2 at index 16 based on column Currency using expression jython:if value is None or not value:\n    return \"UnKnown\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Currency 2",
    "columnInsertIndex": 16,
    "baseColumnName": "Currency",
    "expression": "jython:if value is None or not value:\n    return \"UnKnown\"\nelse:\n    for c in \"%@#!\\[]()?;\":\n        value = value.replace(c, \" \")\n    if \"..\" in value:\n        value = value.replace(\"..\", \".\")\n    return value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Currency",
    "columnName": "Currency"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Currency 2 to Currency",
    "oldColumnName": "Currency 2",
    "newColumnName": "Currency"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Currency using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Currency",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Currency using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Currency",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Currency using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Currency",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Event",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Event",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCH DINNER",
          "LUNCH & DINNER",
          "DINNER - LUNCH"
        ],
        "to": "LUNCH DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU, DINNER",
          "DAILY DINNER MENU",
          "DAILY MENU DINNER"
        ],
        "to": "DAILY MENU, DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY LUNCH MENU",
          "DAILY MENU, LUNCH",
          "DAILY MENU LUNCH"
        ],
        "to": "DAILY LUNCH MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCH OR DINNER",
          "DINNER OR LUNCH",
          "LUNCH &/OR DINNER"
        ],
        "to": "LUNCH OR DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BANQUET AND RECEPTION",
          "RECEPTION AND BANQUET"
        ],
        "to": "BANQUET AND RECEPTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TABLE D'HOTE DINNER",
          "DINNER TABLE D'HOTE"
        ],
        "to": "TABLE D'HOTE DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER - SECOND CABIN",
          "DINNER SECOND CABIN"
        ],
        "to": "DINNER - SECOND CABIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER,SECOND CABIN",
          "DINNER-SECOND CABIN"
        ],
        "to": "DINNER,SECOND CABIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCHEON TABLE D'HOTE",
          "TABLE D'HOTE LUNCHEON"
        ],
        "to": "LUNCHEON TABLE D'HOTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LADIES NIGHT",
          "LADIES' NIGHT"
        ],
        "to": "LADIES NIGHT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BREAKFAST AND SUPPER",
          "SUPPER AND BREAKFAST"
        ],
        "to": "BREAKFAST AND SUPPER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRUHSTUCK-BREAKFAST",
          "FRUHSTUCK/BREAKFAST"
        ],
        "to": "FRUHSTUCK-BREAKFAST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCH",
          "LUNCH."
        ],
        "to": "LUNCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WASHINGTON'S BIRTHDAY BANQUET",
          "BANQUET WASHINGTON'S BIRTHDAY"
        ],
        "to": "WASHINGTON'S BIRTHDAY BANQUET"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABEND-ESSEN",
          "ABENDESSEN"
        ],
        "to": "ABEND-ESSEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER A LA CARTE",
          "A LA CARTE DINNER"
        ],
        "to": "DINNER A LA CARTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCHEON A LA CARTE",
          "LUNCHEON, A LA CARTE"
        ],
        "to": "LUNCHEON A LA CARTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LINCOLN'S BIRTHDAY DINNER",
          "DINNER, LINCOLNS BIRTHDAY"
        ],
        "to": "LINCOLN'S BIRTHDAY DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YEAR'S DINNER",
          "NEW YEARS DINNER"
        ],
        "to": "NEW YEAR'S DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FIFTH ANNUAL DINNER",
          "DINNER, FIFTH ANNUAL"
        ],
        "to": "FIFTH ANNUAL DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. VALENTINE'S DAY DINNER",
          "ST. VALENTINES DAY DINNER"
        ],
        "to": "ST. VALENTINE'S DAY DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRUHSTUCK/LUNCH",
          "FRUHSTUCK-LUNCH"
        ],
        "to": "FRUHSTUCK/LUNCH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YEAR'S DAY DINNER",
          "NEW YEARS DAY DINNER"
        ],
        "to": "NEW YEAR'S DAY DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EIGHTH ANNUAL BANQUET",
          "EIGHTH ANNUAL BANQUET'"
        ],
        "to": "EIGHTH ANNUAL BANQUET"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU, BREAKFAST",
          "DAILY BREAKFAST MENU"
        ],
        "to": "DAILY MENU, BREAKFAST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU, LUNCHEON",
          "DAILY LUNCHEON MENU"
        ],
        "to": "DAILY MENU, LUNCHEON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "INSPECTION TRIP, BREAKFAST",
          "INSPECTION TRIP - BREAKFAST"
        ],
        "to": "INSPECTION TRIP, BREAKFAST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MITTAGESSEN - DINNER",
          "MITTAGESSEN DINNER"
        ],
        "to": "MITTAGESSEN - DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER",
          "DINNER,"
        ],
        "to": "DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MIDDAG/DINNER",
          "MIDDAG-DINNER"
        ],
        "to": "MIDDAG/DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MITTAGESSEN",
          "MITTAG-ESSEN"
        ],
        "to": "MITTAGESSEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "INSPECTION TRIP - LUNCHEON",
          "INSPECTION TRIP, LUNCHEON"
        ],
        "to": "INSPECTION TRIP - LUNCHEON"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Event",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Event",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER/DINER",
          "DINER/DINNER",
          "DINNER, DINER"
        ],
        "to": "DINNER/DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUNCH DINNER",
          "LUNCH-DINNER"
        ],
        "to": "LUNCH DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER A LA CARTE",
          "DINNER-A LA CARTE"
        ],
        "to": "DINNER A LA CARTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU, LUNCHEON",
          "DAILY MENU,LUNCHEON"
        ],
        "to": "DAILY MENU, LUNCHEON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BREAKFAST - SECOND CABIN",
          "BREAKFAST-SECOND CABIN"
        ],
        "to": "BREAKFAST - SECOND CABIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BREAKFAST LUNCH DINNER",
          "BREAKFAST,LUNCH & DINNER"
        ],
        "to": "BREAKFAST LUNCH DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU, SUPPER",
          "DAILY MENU,SUPPER"
        ],
        "to": "DAILY MENU, SUPPER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MITTAGESSEN - DINNER",
          "MITTAGESSEN/DINNER"
        ],
        "to": "MITTAGESSEN - DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER",
          "DINNNER"
        ],
        "to": "DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DEJEUNER FOURCHETTE/LUNCHEON",
          "DEJEUNER FOURCHETTE/ LUNCHEON"
        ],
        "to": "DEJEUNER FOURCHETTE/LUNCHEON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER DANCE",
          "DINNER-DANCE"
        ],
        "to": "DINNER DANCE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER - SECOND CABIN",
          "DINNER,SECOND CABIN"
        ],
        "to": "DINNER - SECOND CABIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOURTH OF JULY DINNER",
          "FOURTH OFJULY DINNER"
        ],
        "to": "FOURTH OF JULY DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU, DINNER",
          "DAILY MENU,DINNER"
        ],
        "to": "DAILY MENU, DINNER"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMM",
          "COMM.",
          "COMM ."
        ],
        "to": "COMM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COM",
          "COM.",
          "COM}"
        ],
        "to": "COM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOC",
          "SOC.",
          "SOC :"
        ],
        "to": "SOC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GOVT",
          "GOV'T",
          "GOV'T."
        ],
        "to": "GOVT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COM SOC",
          "SOC COM",
          "SOC, COM"
        ],
        "to": "COM SOC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "POL SOC",
          "SOC POL"
        ],
        "to": "POL SOC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PATR",
          "PATR."
        ],
        "to": "PATR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NAV",
          "NAV."
        ],
        "to": "NAV"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "POL",
          "POL."
        ],
        "to": "POL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MIL",
          "MIL."
        ],
        "to": "MIL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER PRIVATE",
          "OTHER, PRIVATE"
        ],
        "to": "OTHER PRIVATE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROF",
          "PROF."
        ],
        "to": "PROF"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOC MIL",
          "SOC, MIL"
        ],
        "to": "SOC MIL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GOV",
          "GOV."
        ],
        "to": "GOV"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Venue",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Venue",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER CLUB",
          "OTHER,CLUB"
        ],
        "to": "OTHER CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOC RELIG",
          "SOC,RELIG"
        ],
        "to": "SOC RELIG"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FOREIGN,HOTEL",
          "FOREIGN HOTEL"
        ],
        "to": "FOREIGN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER PRIVATE",
          "OTHER,PRIVATE"
        ],
        "to": "OTHER PRIVATE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Place",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Place",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE \"FRIEDRICH DER GROSSE\"",
          "EN ROUTE - \"FRIEDRICH DER GROSSE\"",
          "EN ROUTE \" FRIEDRICH DER GROSSE\"",
          "EN ROUTE \"FRIEDRICH DER GROSSE \"",
          "EN ROUTE 'FRIEDRICH DER GROSSE\"",
          "EN ROUTE - 'FRIEDRICH DER GROSSE \"",
          "EN ROUTE - :FRIEDRICH DER GROSSE\""
        ],
        "to": "EN ROUTE \"FRIEDRICH DER GROSSE\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S NY",
          "DELMONICO'S, NY",
          "DELMONICOS, NY",
          "DELMONICO'S, N.Y.",
          "DELMONICOS NY",
          "DELMONICOS', NY"
        ],
        "to": "DELMONICO'S NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S, NEW YORK, NY",
          "DELMONICO'S, NEW YORK, N.Y.",
          "DELMONICOS, NEW YORK, N.Y.",
          "DELMONICOS, NEW YORK, NY",
          "DELMONICO'S , NEW YORK, NY",
          "DELMONICO'S. NEW YORK, NY"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AUDITORIUM HOTEL, CHICAGO, IL",
          "AUDITORIUM HOTEL CHICAGO, IL",
          "AUDITORIUM HOTEL , CHICAGO, IL",
          "AUDITORIUM HOTEL CHICAGO IL",
          "AUDITORIUM HOTEL, CHICAGO IL"
        ],
        "to": "AUDITORIUM HOTEL, CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS FRIESLAND",
          "S.S. FRIESLAND",
          "SS. FRIESLAND",
          "S.S. \"FRIESLAND\"",
          "SS \"FRIESLAND\""
        ],
        "to": "SS FRIESLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE NEW WILLARD, WASHINGTON, DC",
          "NEW WILLARD, THE, WASHINGTON, DC",
          "THE NEW WILLARD WASHINGTON, DC",
          "THE NEW WILLARD, WASHINGTON DC",
          "THE NEW WILLARD, WASHINGTON, D.C."
        ],
        "to": "THE NEW WILLARD, WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE - SS \"LAHN\"",
          "EN ROUTE - \"SS LAHN\"",
          "EN ROUTE \"SS LAHN\"",
          "EN ROUTE -SS \"LAHN\"",
          "EN ROUTE _ SS \"LAHN\""
        ],
        "to": "EN ROUTE - SS \"LAHN\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE S.S.\"BARBAROSSA\"",
          "EN ROUTE - S.S.BARBAROSSA",
          "EN ROUTE S.S.BARBAROSSA",
          "EN ROUTE S.S.BARBAROSSA\""
        ],
        "to": "EN ROUTE S.S.\"BARBAROSSA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OLD POINT COMFORT, VA",
          "OLD POINT COMFORT VA",
          "OLD POINT COMFORT, VA.",
          "OLD POINT, COMFORT, VA"
        ],
        "to": "OLD POINT COMFORT, VA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MANHATTAN, NY",
          "HOTEL MANHATTAN NY",
          "MANHATTAN HOTEL NY",
          "MANHATTAN HOTEL, NY"
        ],
        "to": "HOTEL MANHATTAN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE AUDITORIUM, CHICAGO, IL",
          "THE AUDITORIUM CHICAGO, IL",
          "AUDITORIUM, THE, CHICAGO, IL",
          "THE AUDITORIUM CHICAGO IL"
        ],
        "to": "THE AUDITORIUM, CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PHILADELPHIA, PA",
          "PHILADELPHIA PA",
          "PHILADELPHIA, PA.",
          "PHILADELPHIA. PA"
        ],
        "to": "PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RMS CAMPANIA",
          "R.M.S. CAMPANIA",
          "R.M.S. \"CAMPANIA\"",
          "R.M.S. \" CAMPANIA\""
        ],
        "to": "RMS CAMPANIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PFISTER, MILWAUKEE, WI",
          "HOTEL PFISTER, MILWAUKEE WI",
          "PFISTER HOTEL, MILWAUKEE, WI"
        ],
        "to": "HOTEL PFISTER, MILWAUKEE, WI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS: KAMAKURA MARU",
          "SS: \"KAMAKURA MARU\"",
          "SS KAMAKURA MARU"
        ],
        "to": "SS: KAMAKURA MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHERRY'S NY",
          "SHERRY'S, NY",
          "SHERRYS, NY"
        ],
        "to": "SHERRY'S NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "66 ST. & B'WAY NY",
          "66 ST. & B'WAY. NY",
          "66 ST. & BWAY. NY"
        ],
        "to": "66 ST. & B'WAY NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \"EMPRESS OF CHINA\"",
          "RMS EMPRESS OF CHINA",
          "R.M.S. EMPRESS OF CHINA"
        ],
        "to": "R.M.S. \"EMPRESS OF CHINA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL BRUNSWICK NY",
          "BRUNSWICK HOTEL NY",
          "HOTEL BRUNSWICK, NY"
        ],
        "to": "HOTEL BRUNSWICK NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS WESTERNLAND",
          "S.S. WESTERNLAND",
          "S.S. \"WESTERNLAND\""
        ],
        "to": "SS WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WASHINGTON, DC",
          "WASHINGTON, D.C.",
          "WASHINGTON DC"
        ],
        "to": "WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S, NEW YORK,NY",
          "DELMONICO'S NEW YORK,NY",
          "DELMONICO'S, NEW YORK,N.Y."
        ],
        "to": "DELMONICO'S, NEW YORK,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S, NEW YORK CITY",
          "NEW YORK CITY DELMONICO'S",
          "NEW YORK CITY, DELMONICO'S"
        ],
        "to": "DELMONICO'S, NEW YORK CITY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LAKEWOOD, NJ",
          "LAKEWOOD NJ",
          "LAKEWOOD, N.J."
        ],
        "to": "LAKEWOOD, NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCANTILE CLUB ST LOUIS, MO",
          "MERCANTILE CLUB, ST LOUIS MO",
          "MERCANTILE CLUB, ST. LOUIS, MO"
        ],
        "to": "MERCANTILE CLUB ST LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S NEW YORK",
          "DELMONICO'S, NEW YORK",
          "DELMONICOS, NEW YORK"
        ],
        "to": "DELMONICO'S NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MARLBOROUGH HOTEL,",
          "HOTEL MARLBOROUGH",
          "HOTEL MARLBOROUGH,"
        ],
        "to": "MARLBOROUGH HOTEL,"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LONG BEACH, L.I, NY",
          "LONG BEACH, LI, NY",
          "LONG BEACH, L.I., NY"
        ],
        "to": "LONG BEACH, L.I, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL",
          "SAVOY HOTEL,"
        ],
        "to": "HOTEL SAVOY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS COPTIC",
          "S.S. \"COPTIC\"",
          "S.S. COPTIC"
        ],
        "to": "SS COPTIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE-STRATFORD HOTEL, PHILADELPHIA, PA",
          "HOTEL BELLEVUE-STRATFORD, PHILADELPHIA, PA",
          "HOTEL BELLEVUE-STRATFORD PHILADELPHIA, PA"
        ],
        "to": "BELLEVUE-STRATFORD HOTEL, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \"ETRURIA\"",
          "R.M.S. ETRURIA",
          "RMS ETRURIA"
        ],
        "to": "R.M.S. \"ETRURIA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. DENIS HOTEL",
          "HOTEL ST. DENIS",
          "ST. DENIS HOTEL,"
        ],
        "to": "ST. DENIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE HOLLENDEN CLEVELAND OH",
          "THE HOLLENDEN, CLEVELAND OH",
          "THE HOLLENDEN, CLEVELAND, OH"
        ],
        "to": "THE HOLLENDEN CLEVELAND OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS CITY OF PARA",
          "S.S. \"CITY OF PARA\"",
          "S.S. \"CITY OF PARA'"
        ],
        "to": "SS CITY OF PARA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "YOUNG'S HOTEL, BOSTON, MA",
          "YOUNG\"S HOTEL, BOSTON, MA",
          "YOUNG'S HOTEL, BOSTON MA"
        ],
        "to": "YOUNG'S HOTEL, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MAJESTIC PHILADELPHIA, PA",
          "HOTEL MAJESTIC, PHILADELPHIA, PA",
          "MAJESTIC HOTEL, PHILADELPHIA. PA"
        ],
        "to": "HOTEL MAJESTIC PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BRUNSWICK HOTEL, BOSTON, MA",
          "HOTEL BRUNSWICK, BOSTON, MA",
          "HOTEL BRUNSWICK, BOSTON MA"
        ],
        "to": "BRUNSWICK HOTEL, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \"LUCANIA\"",
          "RMS LUCANIA",
          "R.M.S. LUCANIA"
        ],
        "to": "R.M.S. \"LUCANIA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLINTON COUNTY, NY",
          "CLINTON COUNTY NY",
          "CLINTON COUNTY, NY."
        ],
        "to": "CLINTON COUNTY, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS KASUGA",
          "S.S. KASUGA",
          "SS: KASUGA"
        ],
        "to": "SS KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME, BOSTON, MA",
          "HOTEL VENDOME BOSTON, MA",
          "VENDOME HOTEL, BOSTON, MA"
        ],
        "to": "HOTEL VENDOME, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROVIDENCE, RI",
          "PROVIDENCE, R.I.",
          "PROVIDENCE RI"
        ],
        "to": "PROVIDENCE, RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASSAU,N.P.BAHAMAS",
          "NASSAU,NP,BAHAMAS",
          "NASSAU,N.P.,BAHAMAS"
        ],
        "to": "NASSAU,N.P.BAHAMAS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ARLINGTON, WASHINGTON, D.C.",
          "THE ARLINGTON WASHINGTON DC",
          "THE ARLINGTON, WASHINGTON, DC"
        ],
        "to": "THE ARLINGTON, WASHINGTON, D.C."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ASTOR HOTEL, NEW YORK, NY",
          "HOTEL ASTOR, NEW YORK, NY"
        ],
        "to": "ASTOR HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARKER HOUSE, BOSTON,MASS",
          "PARKER HOUSE BOSTON,MASS"
        ],
        "to": "PARKER HOUSE, BOSTON,MASS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE \"H.H.MEIER\"",
          "EN ROUTE \" H.H.MEIER\""
        ],
        "to": "EN ROUTE \"H.H.MEIER\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BERLIN, GERMANY",
          "BERLIN GERMANY"
        ],
        "to": "BERLIN, GERMANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ALGONQUIN CLUB, BOSTON, MA",
          "NEW ALGONQUIN CLUB BOSTON, MA"
        ],
        "to": "NEW ALGONQUIN CLUB, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KONIGIN LUISE",
          "\"KONIGIN LUISE\""
        ],
        "to": "KONIGIN LUISE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SAVOY NEW YORK",
          "HOTEL SAVOY, NEW YORK"
        ],
        "to": "HOTEL SAVOY NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SAVOY HOTEL, NEW YORK, NY",
          "HOTEL SAVOY, NEW YORK, NY"
        ],
        "to": "SAVOY HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD R.M.S. \"ETRURIA\"",
          "ABOARD R.M.S. ETRURIA"
        ],
        "to": "ABOARD R.M.S. \"ETRURIA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LINCOLN CLUB - NY",
          "LINCOLN CLUB NY"
        ],
        "to": "LINCOLN CLUB - NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. AUGUSTINE, FLA",
          "ST. AUGUSTINE, FLA."
        ],
        "to": "ST. AUGUSTINE, FLA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WINDSOR HOTEL, NY",
          "WINDSOR HOTEL NY"
        ],
        "to": "WINDSOR HOTEL, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAMERCY PARK HOTEL",
          "HOTEL GRAMERCY PARK"
        ],
        "to": "GRAMERCY PARK HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASSAU, N.P.",
          "NASSAU, NP"
        ],
        "to": "NASSAU, N.P."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO, IL",
          "CHICAGO IL"
        ],
        "to": "CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOFFMAN HOUSE NEW YORK, NY",
          "HOFFMAN HOUSE, NEW YORK, NY"
        ],
        "to": "HOFFMAN HOUSE NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL JEFFERSON, ST. LOUIS, MO",
          "JEFFERSON HOTEL, ST. LOUIS MO"
        ],
        "to": "HOTEL JEFFERSON, ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD PAQUEBOT LA PROVENCE",
          "ABOARD PAQUEBOT \"LA PROVENCE\""
        ],
        "to": "ABOARD PAQUEBOT LA PROVENCE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "QUEBEC, CANADA",
          "QUEBEC CANADA"
        ],
        "to": "QUEBEC, CANADA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL STENTON PHILADELPHIA PA",
          "HOTEL STENTON, PHILADELPHIA, PA"
        ],
        "to": "HOTEL STENTON PHILADELPHIA PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS TRINIDAD",
          "S.S. \"TRINIDAD\""
        ],
        "to": "SS TRINIDAD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LIVERPOOL ENGLAND }",
          "LIVERPOOL, ENGLAND"
        ],
        "to": "LIVERPOOL ENGLAND }"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PORTLAND, ME",
          "PORTLAND ME"
        ],
        "to": "PORTLAND, ME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD PAQUEBOT \"LA SAVOIE\"",
          "ABOARD PAQUEBOT LA SAVOIE"
        ],
        "to": "ABOARD PAQUEBOT \"LA SAVOIE\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "QUEEN CITY CLUB, CINCINNATI, OH",
          "QUEEN CITY CLUB CINCINNATI OH"
        ],
        "to": "QUEEN CITY CLUB, CINCINNATI, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MECHANICS HALL, BOSTON, MA",
          "MECHANICS' HALL, BOSTON, MA"
        ],
        "to": "MECHANICS HALL, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EAGLE HOTEL GETTYSBURG, PA",
          "EAGLE HOTEL, GETTYSBURG, PA"
        ],
        "to": "EAGLE HOTEL GETTYSBURG, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DEL CAMPIDOGLIO, NEW YORK, NY",
          "HOTEL DEL CAMPIDOGLIO, NEW YORK, N.Y."
        ],
        "to": "HOTEL DEL CAMPIDOGLIO, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL IROQUOIS, BUFFALO,NY",
          "HOTEL IROQUOIS, BUFFALO,N.Y."
        ],
        "to": "HOTEL IROQUOIS, BUFFALO,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLINTON COUNTY,NY",
          "CLINTON COUNTY.NY"
        ],
        "to": "CLINTON COUNTY,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL GRAMERCY PARK 52 GRAMERCY PARK NORTH",
          "GRAMERCY PARK HOTEL HOTEL GRAMERCY PARK 52 GRAMERCY PARK NORTH"
        ],
        "to": "HOTEL GRAMERCY PARK 52 GRAMERCY PARK NORTH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TACOMA WA",
          "TACOMA, WA }"
        ],
        "to": "TACOMA WA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS CITY OF RIO DE JANEIRO",
          "S.S. \"CITY OF RIO DE JANEIRO\""
        ],
        "to": "SS CITY OF RIO DE JANEIRO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. EMPRESS OF INDIA",
          "R.M.S. \"EMPRESS OF INDIA\""
        ],
        "to": "R.M.S. EMPRESS OF INDIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BALTIMORE,MD",
          "BALTIMORE,MD."
        ],
        "to": "BALTIMORE,MD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SS KASUGA MARU",
          "EN ROUTE ABOARD SS. KASUGA MARU"
        ],
        "to": "EN ROUTE ABOARD SS KASUGA MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ZINZENDORF, WINSTON-SALEM, NC",
          "ZINZENDORF HOTEL, WINSTON-SALEM, NC"
        ],
        "to": "HOTEL ZINZENDORF, WINSTON-SALEM, NC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLEVELAND, OHIO",
          "CLEVELAND. OHIO"
        ],
        "to": "CLEVELAND, OHIO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE TEN EYCK, ALBANY, NY",
          "TEN EYCK, THE, ALBANY, NY"
        ],
        "to": "THE TEN EYCK, ALBANY, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUTLER, PA",
          "BUTLER, PA."
        ],
        "to": "BUTLER, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO, ILL",
          "CHICAGO ,ILL"
        ],
        "to": "CHICAGO, ILL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MAJESTIC",
          "MAJESTIC HOTEL"
        ],
        "to": "HOTEL MAJESTIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO,IL",
          "CHICAGO,IL."
        ],
        "to": "CHICAGO,IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ASTOR",
          "ASTOR HOTEL"
        ],
        "to": "HOTEL ASTOR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "VIRGINIA BEACH, VA",
          "VIRGINIA BEACH VA"
        ],
        "to": "VIRGINIA BEACH, VA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SAVOY, NY",
          "HOTEL SAVOY NY"
        ],
        "to": "HOTEL SAVOY, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MANILA, P.I.",
          "MANILA, PI"
        ],
        "to": "MANILA, P.I."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE HOTEL, PHILADELPHIA, PA",
          "HOTEL BELLEVUE, PHILADELPHIA PA"
        ],
        "to": "BELLEVUE HOTEL, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND PACIFIC HOTEL, CHICAGO, IL",
          "GRAND PACIFIC HOTEL CHICAGO, IL"
        ],
        "to": "GRAND PACIFIC HOTEL, CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MONTREAL CANADA",
          "MONTREAL, CANADA"
        ],
        "to": "MONTREAL CANADA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASSAU, N.P. BAHAMAS",
          "NASSAU, N.P., BAHAMAS"
        ],
        "to": "NASSAU, N.P. BAHAMAS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAMPA, FL",
          "TAMPA FL"
        ],
        "to": "TAMPA, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MANHATTAN HOTEL, NEW YORK, NY",
          "HOTEL MANHATTAN, NEW YORK, NY"
        ],
        "to": "MANHATTAN HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION LEAGUE PHILADELPHIA PA",
          "UNION LEAGUE, PHILADELPHIA, PA"
        ],
        "to": "UNION LEAGUE PHILADELPHIA PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NARRAGANSETT HOTEL, PROVIDENCE RI",
          "NARRAGANSETT HOTEL, PROVIDENCE, RI"
        ],
        "to": "NARRAGANSETT HOTEL, PROVIDENCE RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE RALEIGH, WASHINGTON, DC",
          "THE RALEIGH, WASHINGTON DC"
        ],
        "to": "THE RALEIGH, WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HORTICULTURAL HALL, PHILADELPHIA, PA",
          "HORTICULTURAL HALL, PHILADELPHIA PA"
        ],
        "to": "HORTICULTURAL HALL, PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMMERCIAL CLUB, PORTLAND, OR",
          "PORTLAND COMMERCIAL CLUB, PORTLAND, OR"
        ],
        "to": "COMMERCIAL CLUB, PORTLAND, OR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOSTON, MA",
          "BOSTON MA"
        ],
        "to": "BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE WELLINGTON, PROVIDENCE RI",
          "WELLINGTON, THE, PROVIDENCE, RI"
        ],
        "to": "THE WELLINGTON, PROVIDENCE RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLA",
          "FLA."
        ],
        "to": "FLA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK ATHLETIC CLUB",
          "NEW YORK ATHLETIC CLUB, NEW YORK"
        ],
        "to": "NEW YORK ATHLETIC CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAMPA,FLA.",
          "TAMPA.FLA."
        ],
        "to": "TAMPA,FLA."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOSTON, MASS",
          "BOSTON, MASS."
        ],
        "to": "BOSTON, MASS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST. GEORGE, NYACK, NY",
          "ST. GEORGE HOTEL, NYACK, NY"
        ],
        "to": "HOTEL ST. GEORGE, NYACK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SS KOBE MARU",
          "EN ROUTE ABOARD SS. KOBE MARU"
        ],
        "to": "EN ROUTE ABOARD SS KOBE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MELBOURNE, AUSTRALIA",
          "MELBOURNE AUSTRALIA"
        ],
        "to": "MELBOURNE, AUSTRALIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NOS. 667 TO 677 BROADWAY , OPPOSITE BOND STREET, MIDWAY BETWEEN BATTERY AND CENTRAL PARK, NEW YORK NY",
          "NOS. 667 TO 677 BROADWAY , OPPOSITE BOND STREET, MIDWAY BETWEEN BATTERY AND CENTRAL PARK, NEW YORK, NY"
        ],
        "to": "NOS. 667 TO 677 BROADWAY , OPPOSITE BOND STREET, MIDWAY BETWEEN BATTERY AND CENTRAL PARK, NEW YORK NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S. NEW YORK",
          "USMS NEW YORK"
        ],
        "to": "U.S.M.S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WASHINGTON,D.C.",
          "WASHINGTON,DC"
        ],
        "to": "WASHINGTON,D.C."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPENHAGEN, DENMARK",
          "COPENHAGEN DENMARK"
        ],
        "to": "COPENHAGEN, DENMARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NY",
          "N.Y."
        ],
        "to": "NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BRUNSWICK,THE,BOSTON MASS",
          "BRUNSWICK,THE,BOSTON, MASS"
        ],
        "to": "BRUNSWICK,THE,BOSTON MASS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DENVER, COLO.",
          "DENVER, COLO"
        ],
        "to": "DENVER, COLO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. NACOOCHEE",
          "SS NACOOCHEE"
        ],
        "to": "S.S. NACOOCHEE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS RIO DE JANEIRO",
          "SS: RIO DE JANEIRO"
        ],
        "to": "SS RIO DE JANEIRO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RMS OCEANIC",
          "R.M.S. OCEANIC"
        ],
        "to": "RMS OCEANIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ARGYLE, THE, BROOKLYN, NY",
          "THE ARGYLE, BROOKLYN, NY"
        ],
        "to": "ARGYLE, THE, BROOKLYN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHAMBERLIN'S WASHINGTON,DC",
          "CHAMBERLIN'S, WASHINGTON,D.C."
        ],
        "to": "CHAMBERLIN'S WASHINGTON,DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION LEAGUE CLUB NY",
          "UNION LEAGUE CLUB, NY"
        ],
        "to": "UNION LEAGUE CLUB NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST. DENIS, NY",
          "ST. DENIS HOTEL NY"
        ],
        "to": "HOTEL ST. DENIS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TONTINE HOTEL, NEW HAVEN, CT",
          "NEW TONTINE HOTEL, NEW HAVEN CT"
        ],
        "to": "TONTINE HOTEL, NEW HAVEN, CT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S",
          "DELMONICOS"
        ],
        "to": "DELMONICO'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "\"THE ARGYLE\"",
          "THE ARGYLE"
        ],
        "to": "\"THE ARGYLE\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MANHATTAN BEACH, LONG ISLAND NY",
          "MANHATTAN BEACH, LONG ISLAND, NY"
        ],
        "to": "MANHATTAN BEACH, LONG ISLAND NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S. \"KOBE WARU\"",
          "EN ROUTE ABOARD S.S. KOBE WARU"
        ],
        "to": "EN ROUTE ABOARD S.S. \"KOBE WARU\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PALACE HOTEL DENVER, COL",
          "PALACE HOTEL, DENVER, COL"
        ],
        "to": "PALACE HOTEL DENVER, COL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GERMANTOWN PA",
          "GERMANTOWN, PA"
        ],
        "to": "GERMANTOWN PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK, NY",
          "NEW YORK NY"
        ],
        "to": "NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAMPFER H.H. MEIER",
          "DAMPFER \"H.H. MEIER\""
        ],
        "to": "DAMPFER H.H. MEIER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OMAHA NEBRASKA",
          "OMAHA, NEBRASKA"
        ],
        "to": "OMAHA NEBRASKA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW WILLARD WASHINGTON, DC",
          "NEW WILLARD, WASHINGTON, DC"
        ],
        "to": "NEW WILLARD WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO,ILL.",
          "CHICAGO,ILL"
        ],
        "to": "CHICAGO,ILL."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CINCINNATI , OHIO",
          "CINCINNATI, OHIO"
        ],
        "to": "CINCINNATI , OHIO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAMPFER KAISER WILHELM DER GROSSE",
          "DAMPFER \"KAISER WILHELM DER GROSSE\""
        ],
        "to": "DAMPFER KAISER WILHELM DER GROSSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PHILADELPHIA,PA.",
          "PHILADELPHIA,PA"
        ],
        "to": "PHILADELPHIA,PA."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA, NY",
          "WALDORF-ASTORIA NY"
        ],
        "to": "WALDORF-ASTORIA, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ASCOT ENGLAND",
          "ASCOT, ENGLAND"
        ],
        "to": "ASCOT ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LOGAN HOUSE, ALTOONA, PA",
          "LOGAN HOUSE ALTOONA, PA"
        ],
        "to": "LOGAN HOUSE, ALTOONA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PENN",
          "PENN."
        ],
        "to": "PENN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NARRAGANSETT PIER R.I.",
          "NARRAGANSETT PIER, RI"
        ],
        "to": "NARRAGANSETT PIER R.I."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION CLUB",
          "UNION CLUB,"
        ],
        "to": "UNION CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ADELAIDE, AUSTRALIA",
          "ADELAIDE AUSTRALIA"
        ],
        "to": "ADELAIDE, AUSTRALIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL, CINCINNATI OH",
          "GRAND HOTEL, CINCINNATI, OH"
        ],
        "to": "GRAND HOTEL, CINCINNATI OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE S.S VADERLAND",
          "EN ROUTE S.S. VADERLAND"
        ],
        "to": "EN ROUTE S.S VADERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ACADEMY OF MUSIC BROOKLYN, NY",
          "ACADEMY OF MUSIC, BROOKLYN, NY"
        ],
        "to": "ACADEMY OF MUSIC BROOKLYN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SAN FRANCISCO,CA",
          "SAN FRANCISCO,CA."
        ],
        "to": "SAN FRANCISCO,CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. LOUIS, MO",
          "ST. LOUIS MO"
        ],
        "to": "ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LONG BEACH,L.I., NY&",
          "LONG BEACH,LI, NY"
        ],
        "to": "LONG BEACH,L.I., NY&"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FAIRMONT HOTEL SAN FRANCISCO, CA",
          "FAIRMONT HOTEL, SAN FRANCISCO, CA"
        ],
        "to": "FAIRMONT HOTEL SAN FRANCISCO, CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ZERMATT, SWITZERLAND",
          "ZERMATT SWITZERLAND"
        ],
        "to": "ZERMATT, SWITZERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARK ROW BLDG. NY",
          "PARK ROW BLDG., NY, NY"
        ],
        "to": "PARK ROW BLDG. NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE PLAZA",
          "PLAZA, THE"
        ],
        "to": "THE PLAZA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SARATOGA SPRINGS, NY",
          "SARATOGA SPRINGS, NY."
        ],
        "to": "SARATOGA SPRINGS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD PAQUEBOT LA TOURAINE",
          "ABOARD PAQUEBOT \"LA TOURAINE\""
        ],
        "to": "ABOARD PAQUEBOT LA TOURAINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AUDITORIUM",
          "AUDITORIUM,"
        ],
        "to": "AUDITORIUM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA, NEW YORK",
          "WALDORF-ASTORIA NEW YORK"
        ],
        "to": "WALDORF-ASTORIA, NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL CONTINENTAL PARIS, FRANCE",
          "HOTEL CONTINENTAL, PARIS, FRANCE"
        ],
        "to": "HOTEL CONTINENTAL PARIS, FRANCE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK",
          "\"NEW YORK\""
        ],
        "to": "NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PAWLING, NY",
          "PAWLING NY"
        ],
        "to": "PAWLING, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S.ROTTERDAM",
          "RMS-ROTTERDAM"
        ],
        "to": "R.M.S.ROTTERDAM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUFFALO, NY",
          "BUFFALO NY"
        ],
        "to": "BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS KAISER WILHELM DER GROSSE",
          "S.S. \"KAISER WILHELM DER GROSSE\""
        ],
        "to": "SS KAISER WILHELM DER GROSSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD 'PRINZ FRIEDRICH WILHELM'",
          "ABOARD PRINZ FRIEDRICH WILHELM''"
        ],
        "to": "ABOARD 'PRINZ FRIEDRICH WILHELM'"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RUSSELL HOUSE, DETROIT, MI",
          "RUSSELL HOUSE DETROIT, MI"
        ],
        "to": "RUSSELL HOUSE, DETROIT, MI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BAR HARBOR ME",
          "BAR HARBOR, ME"
        ],
        "to": "BAR HARBOR ME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SCHNELLDAMPFER \"AUGUSTE VICTORIA\"",
          "SCHNELLDAMPFER: \"AUGUSTE VICTORIA\""
        ],
        "to": "SCHNELLDAMPFER \"AUGUSTE VICTORIA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS DORIC",
          "S.S. \"DORIC\""
        ],
        "to": "SS DORIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. ZEALANDIA",
          "SS ZEALANDIA"
        ],
        "to": "S.S. ZEALANDIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE S.S. ZEELAND",
          "EN ROUTE S.S ZEELAND"
        ],
        "to": "EN ROUTE S.S. ZEELAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ARLINGTON,WASH.DC",
          "THE ARLINGTON,WASH.DC."
        ],
        "to": "THE ARLINGTON,WASH.DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD PAQUEBOT LA LORRAINE",
          "ABOARD PAQUEBOT \"LA LORRAINE\""
        ],
        "to": "ABOARD PAQUEBOT LA LORRAINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "57 BROAD STREET, NY",
          "57 BROAD STREET - NY"
        ],
        "to": "57 BROAD STREET, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CINCINNATI, OH",
          "CINCINNATI OH"
        ],
        "to": "CINCINNATI, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SS. KASUGA",
          "EN ROUTE ABOARD SS KASUGA"
        ],
        "to": "EN ROUTE ABOARD SS. KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD PAQUEBOT \"LA BRETAGNE\"",
          "ABOARD PAQUEBOT LA BRETAGNE"
        ],
        "to": "ABOARD PAQUEBOT \"LA BRETAGNE\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MINNEAPOLIS CLUB MINNEAPOLIS, MN",
          "MINNEAPOLIS CLUB, MINNEAPOLIS, MN"
        ],
        "to": "MINNEAPOLIS CLUB MINNEAPOLIS, MN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S. FRIESLAND",
          "EN ROUTE ABOARD SS FRIESLAND"
        ],
        "to": "EN ROUTE ABOARD S.S. FRIESLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ATLANTIC CITY, NJ",
          "ATLANTIC CITY, N.J."
        ],
        "to": "ATLANTIC CITY, NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BWAY & 63RD ST. NY",
          "B'WAY & 63RD ST. NY"
        ],
        "to": "BWAY & 63RD ST. NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SYRACUSE NY",
          "SYRACUSE, NY"
        ],
        "to": "SYRACUSE NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ADIRONDACKS, NY",
          "ADIRONDACKS NY"
        ],
        "to": "ADIRONDACKS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRANCONIA NOTCH NH",
          "FRANCONIA NOTCH NH,"
        ],
        "to": "FRANCONIA NOTCH NH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "139 EIGHTH STREET BET. BROADWAY AND 4TH AVE., NEW YORK NY",
          "139 EIGHTH STREET, BET. BROADWAY AND 4TH AVE., NEW YORK, NY"
        ],
        "to": "139 EIGHTH STREET BET. BROADWAY AND 4TH AVE., NEW YORK NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROOKLYN, NY",
          "BROOKLYN NY"
        ],
        "to": "BROOKLYN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NAPLES, ITALY",
          "NAPLES ITALY"
        ],
        "to": "NAPLES, ITALY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KRUEGER AUDITORIUM NEWARK NJ",
          "KRUEGER AUDITORIUM, NEWARK, NJ"
        ],
        "to": "KRUEGER AUDITORIUM NEWARK NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROME, ITALY",
          "ROME ITALY"
        ],
        "to": "ROME, ITALY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS \"FRIEDRICH DER GROSSE\"",
          "SS FRIEDRICH DER GROSSE"
        ],
        "to": "SS \"FRIEDRICH DER GROSSE\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. DENIS HOTEL NEW YORK",
          "ST. DENIS HOTEL, NEW YORK"
        ],
        "to": "ST. DENIS HOTEL NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TERRACE GARDEN",
          "TERRACE GARDEN,"
        ],
        "to": "TERRACE GARDEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "66TH ST. & BWAY NY",
          "66TH ST & B'WAY, NY"
        ],
        "to": "66TH ST. & BWAY NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MARLBOROUGH, NEW YORK, NY",
          "MARLBOROUGH HOTEL, NEW YORK, NY"
        ],
        "to": "HOTEL MARLBOROUGH, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. CHARLES HOTEL, NEW ORLEANS LA",
          "ST. CHARLES HOTEL, NEW ORLEANS, LA"
        ],
        "to": "ST. CHARLES HOTEL, NEW ORLEANS LA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELLICOTT CLUB, BUFFALO, NY",
          "ELLICOTT CLUB BUFFALO NY"
        ],
        "to": "ELLICOTT CLUB, BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAMPOBELLO ISLAND",
          "CAMPOBELLO ISLAND,"
        ],
        "to": "CAMPOBELLO ISLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL BELLEVUE",
          "BELLEVUE HOTEL"
        ],
        "to": "HOTEL BELLEVUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CECIL HOTEL, LONDON, ENGLAND",
          "HOTEL CECIL, LONDON, ENGLAND"
        ],
        "to": "CECIL HOTEL, LONDON, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASHVILLE, TENN",
          "NASHVILLE, TENN."
        ],
        "to": "NASHVILLE, TENN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WILLARD, WASHINGTON, DC",
          "WILLARD HOTEL, WASHINGTON, DC"
        ],
        "to": "HOTEL WILLARD, WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE WALDORF ASTORIA",
          "WALDORF ASTORIA, THE"
        ],
        "to": "THE WALDORF ASTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS WESTERNLAND, EN ROUTE",
          "SS WESTERNLAND - EN ROUTE"
        ],
        "to": "SS WESTERNLAND, EN ROUTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NARRAGANSETT PIER,R.I.",
          "NARRAGANSETT PIER,RI"
        ],
        "to": "NARRAGANSETT PIER,R.I."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLEVELAND, OH",
          "CLEVELAND OH"
        ],
        "to": "CLEVELAND, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. PETERSBURG RUSSIA",
          "ST. PETERSBURG, RUSSIA"
        ],
        "to": "ST. PETERSBURG RUSSIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "156 SECOND AVENUE NY",
          "156 SECOND AVENUE, NY"
        ],
        "to": "156 SECOND AVENUE NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAYLOR'S HOTEL, JERSEY CITY NJ",
          "TAYLOR'S HOTEL, JERSEY CITY, N.J."
        ],
        "to": "TAYLOR'S HOTEL, JERSEY CITY NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON ENGLAND",
          "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON, ENGLAND"
        ],
        "to": "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO BEACH HOTEL CHICAGO, IL",
          "CHICAGO BEACH HOTEL, CHICAGO, IL"
        ],
        "to": "CHICAGO BEACH HOTEL CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARK ROW BUILDING NY",
          "PARK ROW BUILDING, NY"
        ],
        "to": "PARK ROW BUILDING NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO, NY",
          "DELMONICO NY"
        ],
        "to": "DELMONICO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND PACIFIC HOTEL",
          "GRAND PACIFIC HOTEL,"
        ],
        "to": "GRAND PACIFIC HOTEL"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Place",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Place",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. LOUIS, MO",
          "ST.LOUIS,MO",
          "ST LOUIS,MO",
          "ST.LOUIS, MO"
        ],
        "to": "ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S, NEW YORK, NY",
          "DELMONICO'S, NEW YORK,NY",
          "DELMONICO'S,NEW YORK NY",
          "DELMONICO'S,NEW YORK,NY"
        ],
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL IROQUOIS, BUFFALO, NY",
          "HOTEL IROQUOIS, BUFFALO,NY",
          "HOTEL IROQUOIS,BUFFALO,NY"
        ],
        "to": "HOTEL IROQUOIS, BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA, NEW YORK, NY",
          "WALDORF ASTORIA, NEW YORK, NY",
          "WALDORF ASTORIA,NEW YORK,NY"
        ],
        "to": "WALDORF-ASTORIA, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASSAU, N.P.",
          "NASSAU,N.P.",
          "NASSAU, N. P.,"
        ],
        "to": "NASSAU, N.P."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MIAMI BISCAYNE BAY,FLA.",
          "MIAMI BISCAYNE BAY, FLA.",
          "MIAMI,BISCAYNE BAY,FLA."
        ],
        "to": "MIAMI BISCAYNE BAY,FLA."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA, THE, NEW YORK, NY",
          "WALDORF ASTORIA,THE, NEW YORK, NY",
          "WALDORF-ASTORIA,THE, NEW YORK,NY"
        ],
        "to": "WALDORF-ASTORIA, THE, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PLANTERS HOTEL, ST. LOUIS, MO",
          "PLANTERS HOTEL, ST.LOUIS, MO",
          "PLANTERS HOTEL, ST.LOUIS,MO"
        ],
        "to": "PLANTERS HOTEL, ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASSAU, N.P. BAHAMAS",
          "NASSAU,N.P.BAHAMAS",
          "NASSAU,NP BAHAMAS"
        ],
        "to": "NASSAU, N.P. BAHAMAS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PUT-IN-BAY ISLAND, OH",
          "PUT IN BAY ISLAND, OH",
          "PUT-IN-BAY-ISLAND, OH"
        ],
        "to": "PUT-IN-BAY ISLAND, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ARGYLE, THE, BROOKLYN, NY",
          "ARGYLE,THE, BROOKLYN,NY",
          "ARGYLE,THE,BROOKLYN,NY"
        ],
        "to": "ARGYLE, THE, BROOKLYN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE, EXPRESS-STEAMER FURST BISMARCK",
          "EN-ROUTE EXPRESS-STEAMER FURST BISMARCK",
          "ENROUTE EXPRESS STEAMER \"FURST BISMARCK\""
        ],
        "to": "EN ROUTE, EXPRESS-STEAMER FURST BISMARCK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST.AUGUSTINE,FLA.",
          "ST. AUGUSTINE, FLA",
          "ST.AUGUSTINE, FLA."
        ],
        "to": "ST.AUGUSTINE,FLA."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOUTHERN HOTEL, ST. LOUIS, MO",
          "SOUTHERN HOTEL, ST.LOUIS,MO",
          "SOUTHERN HOTEL,ST. LOUIS,MO."
        ],
        "to": "SOUTHERN HOTEL, ST. LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NARRAGANSETT PIER R.I.",
          "NARRAGANSETT PIER,R.I.",
          "NARAGANSETT PIER, RI"
        ],
        "to": "NARRAGANSETT PIER R.I."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FANEUIL HALL, BOSTON, MASS",
          "FANEUIL HALL, BOSTON,MASS",
          "FANEUIL HALL,BOSTON,MASS."
        ],
        "to": "FANEUIL HALL, BOSTON, MASS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LONG BEACH, L.I, NY",
          "LONG BEACH,L.I., NY&",
          "LONG BEACH,L.I.,NY"
        ],
        "to": "LONG BEACH, L.I, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "117 WEST 34TH STREET,NEW YORK,NY",
          "117 WEST 34TH STREET, NEW YORK,NY",
          "117WEST 34TH STREET,NEW YORK,NY"
        ],
        "to": "117 WEST 34TH STREET,NEW YORK,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA, NY",
          "WALDORF ASTORIA, NY",
          "WALDORF-ASTORIA,NY"
        ],
        "to": "WALDORF-ASTORIA, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WALTON, PHILADELPHIA PA",
          "HOTEL WALTON, PHILADELPHIA,PA",
          "HOTEL WALTON,PHILADELPHIA,PA"
        ],
        "to": "HOTEL WALTON, PHILADELPHIA PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. CHARLES HOTEL, NEW ORLEANS LA",
          "ST. CHARLES HOTEL,NEW ORLEANS, LA",
          "ST. CHARLES HOTEL,NEW ORLEANS,LA"
        ],
        "to": "ST. CHARLES HOTEL, NEW ORLEANS LA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO,ILL.",
          "CHICAGO, ILL"
        ],
        "to": "CHICAGO,ILL."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOBOKEN, NJ",
          "HOBOKEN,NJ"
        ],
        "to": "HOBOKEN, NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "57 BROAD STREET, NEW YORK, NY",
          "57 BROAD STREET,NEW YORK,NY"
        ],
        "to": "57 BROAD STREET, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPENHAGEN, DENMARK",
          "COPENHAGEN,DENMARK"
        ],
        "to": "COPENHAGEN, DENMARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE - S.S.\"H.H.MEIER\"",
          "EN ROUTE -S.S. \"H.H.MEIER\""
        ],
        "to": "EN ROUTE - S.S.\"H.H.MEIER\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO BEACH HOTEL CHICAGO, IL",
          "CHICAGO BEACH HOTEL, CHICAGO.IL"
        ],
        "to": "CHICAGO BEACH HOTEL CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUCKINGHAM PALACE, LONDON, ENGLAND",
          "BUCKINGHAM PALACE, LONDON,ENGLAND"
        ],
        "to": "BUCKINGHAM PALACE, LONDON, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S.ZEELAND",
          "EN ROUTE ABOARD S.S. ZEELAND"
        ],
        "to": "EN ROUTE ABOARD S.S.ZEELAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. NICHOLAS HOTEL, ST.LOUIS, MO",
          "ST.NICHOLAS HOTEL,ST. LOUIS,MO"
        ],
        "to": "ST. NICHOLAS HOTEL, ST.LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "66TH ST AND BROADWAY,NEW YORK,NY",
          "66TH ST. AND BROADWAY NEW YORK,NY"
        ],
        "to": "66TH ST AND BROADWAY,NEW YORK,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SCHNELLDAMPFER EXPRESS STEAMER AUGUSTE VICTORIA",
          "EN ROUTE ABOARD SCHNELLDAMPFER EXPRESS STEAMER AUGUSTE-VICTORIA"
        ],
        "to": "EN ROUTE ABOARD SCHNELLDAMPFER EXPRESS STEAMER AUGUSTE VICTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WHITE MOUNTAINS, NH",
          "WHITE MOUNTAINS,N.H."
        ],
        "to": "WHITE MOUNTAINS, NH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARKER HOUSE, BOSTON,MASS",
          "PARKER HOUSE,BOSTON,MASS"
        ],
        "to": "PARKER HOUSE, BOSTON,MASS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CINCINNATI , OHIO",
          "CINCINNATI,OHIO"
        ],
        "to": "CINCINNATI , OHIO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE WALDORF-ASTORIA",
          "THE WALDORF ASTORIA"
        ],
        "to": "THE WALDORF-ASTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. GEORGE HOTEL",
          "ST.GEORGE HOTEL"
        ],
        "to": "ST. GEORGE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S. ZEALANDIA",
          "EN ROUTE ABOARD S.S.ZEALANDIA"
        ],
        "to": "EN ROUTE ABOARD S.S. ZEALANDIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL, LONDON, ENGLAND",
          "GRAND HOTEL,LONDON, ENGLAND"
        ],
        "to": "GRAND HOTEL, LONDON, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD DAMPFER FRIEDRICH DER GROSSE",
          "EN ROUTE ABOARD DAMPFER FRIEDRICH DER GROSSER"
        ],
        "to": "EN ROUTE ABOARD DAMPFER FRIEDRICH DER GROSSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLEVELAND,OHIO",
          "CLEVELAND, OHIO"
        ],
        "to": "CLEVELAND,OHIO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RMS CAMPANIA",
          "R.M.S.\"CAMPANIA\""
        ],
        "to": "RMS CAMPANIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROANOKE, VA",
          "ROANOKE,VA"
        ],
        "to": "ROANOKE, VA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CORONADA BEACH, CA.",
          "CORONADA BEACH,CA."
        ],
        "to": "CORONADA BEACH, CA."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST. DENIS, NY",
          "HOTEL ST. DENIS,NY"
        ],
        "to": "HOTEL ST. DENIS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OCEAN HOUSE, NEWPORT, RI",
          "OCEAN HOUSE,NEWPORT,R.I."
        ],
        "to": "OCEAN HOUSE, NEWPORT, RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE AUDITORIUM, CHICAGO,ILL.",
          "THE AUDITORIUM,CHICAGO,ILL"
        ],
        "to": "THE AUDITORIUM, CHICAGO,ILL."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCANTILE CLUB ST LOUIS, MO",
          "MERCANTILE CLUB, ST.LOUIS MO"
        ],
        "to": "MERCANTILE CLUB ST LOUIS, MO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST GEORGE,NYACK-ON-HUDSON,NY",
          "HOTEL ST.GEORGE,NYACK-ON-HUDSON, NY"
        ],
        "to": "HOTEL ST GEORGE,NYACK-ON-HUDSON,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MORELLO'S, NEW YORK, NY",
          "MORELLO'S,NEW YORK, N.Y."
        ],
        "to": "MORELLO'S, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OLD POINT COMFORT, VA",
          "OLD POINT COMFORT,VA"
        ],
        "to": "OLD POINT COMFORT, VA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PALACE HOTEL, SAN FRANCISCO, CA",
          "PALACE HOTEL, SAN FRANCISCO, CAL"
        ],
        "to": "PALACE HOTEL, SAN FRANCISCO, CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SYRACUSE NY",
          "SYRACUSE,NY"
        ],
        "to": "SYRACUSE NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ARLINGTON, WASHINGTON, D.C.",
          "THE ARLINGTON, WASHINGTON,DC"
        ],
        "to": "THE ARLINGTON, WASHINGTON, D.C."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LONDON, ENGLAND",
          "LONDON,ENGLAND"
        ],
        "to": "LONDON, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LUZERN, SWITZERLAND",
          "LUZERN,SWITZERLAND"
        ],
        "to": "LUZERN, SWITZERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PORTLAND, OR",
          "PORTLAND,OR."
        ],
        "to": "PORTLAND, OR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL COCHRAN, WASHINGTON DC",
          "HOTEL COCHRAN, WASHINGTON,D.C."
        ],
        "to": "HOTEL COCHRAN, WASHINGTON DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOUTH POLAND, ME",
          "SOUTH POLAND,ME."
        ],
        "to": "SOUTH POLAND, ME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "QUEBEC, CANADA",
          "QUEBEC,CANADA"
        ],
        "to": "QUEBEC, CANADA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SS KOBE MARU",
          "EN ROUTE ABOARD SS.KOBE MARU"
        ],
        "to": "EN ROUTE ABOARD SS KOBE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SAN FRANCISCO, CA",
          "SAN FRANCISCO,CA"
        ],
        "to": "SAN FRANCISCO, CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL BRUNSWICK NY",
          "HOTEL BRUNSWICK,NY"
        ],
        "to": "HOTEL BRUNSWICK NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARK ROW BLDG. NY",
          "PARK ROW BLDG.NY"
        ],
        "to": "PARK ROW BLDG. NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOFFMAN HOUSE NEW YORK, NY",
          "HOFFMAN HOUSE,NEW YORK,NY"
        ],
        "to": "HOFFMAN HOUSE NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHATTANOOGA, TN",
          "CHATTANOOGA,TN"
        ],
        "to": "CHATTANOOGA, TN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE STEAMER FURST BISMARCK",
          "ENROUTE STEAMER \"FURST BISMARCK\""
        ],
        "to": "EN ROUTE STEAMER FURST BISMARCK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD U.S.M.S. ST. LOUIS",
          "ABOARD U.S.M.S.ST. LOUIS"
        ],
        "to": "ABOARD U.S.M.S. ST. LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WACO, TX",
          "WACO,TX"
        ],
        "to": "WACO, TX"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLINTON COUNTY, NY",
          "CLINTON COUNTY,NY"
        ],
        "to": "CLINTON COUNTY, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S NEW YORK",
          "DELMONICO'S.NEW YORK"
        ],
        "to": "DELMONICO'S NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TORONTO, CANADA",
          "TORONTO,CANADA"
        ],
        "to": "TORONTO, CANADA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \"ETRURIA\"",
          "R. M. S. ETRURIA"
        ],
        "to": "R.M.S. \"ETRURIA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LOS ANGELES,CA",
          "LOS ANGELES, CA"
        ],
        "to": "LOS ANGELES,CA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA, NEW YORK",
          "WALDORF- ASTORIA, NEW YORK"
        ],
        "to": "WALDORF-ASTORIA, NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMSTERDAM, HOLLAND",
          "AMSTERDAM,HOLLAND"
        ],
        "to": "AMSTERDAM, HOLLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BALTIMORE, MD",
          "BALTIMORE,MD"
        ],
        "to": "BALTIMORE, MD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HELENA, MT",
          "HELENA,MT"
        ],
        "to": "HELENA, MT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. AUGUSTINE, FL",
          "ST.AUGUSTINE,FL"
        ],
        "to": "ST. AUGUSTINE, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION SQUARE, NY",
          "UNION SQUARE,NY"
        ],
        "to": "UNION SQUARE, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PHILADELPHIA, PA",
          "PHILADELPHIA,PA."
        ],
        "to": "PHILADELPHIA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE STEAMER AUGUSTE VICTORIA",
          "ENROUTE STEAMER \"AUGUSTE VICTORIA\""
        ],
        "to": "EN ROUTE STEAMER AUGUSTE VICTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF-ASTORIA HOTEL, NEW YORK, NY",
          "WALDORF ASTORIA HOTEL, NEW YORK, NY"
        ],
        "to": "WALDORF-ASTORIA HOTEL, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S. SOUTHWARK",
          "ENROUTE ABOARD S.S. SOUTHWARK"
        ],
        "to": "EN ROUTE ABOARD S.S. SOUTHWARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK, NY",
          "NEW YORK,NY"
        ],
        "to": "NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "137 E. MADISON ST. CHICAGO, ILL.",
          "137 E. MADISON ST.,CHICAGO,ILL."
        ],
        "to": "137 E. MADISON ST. CHICAGO, ILL."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROADWAY, NY",
          "BROADWAY,NY"
        ],
        "to": "BROADWAY, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST.LOUIS CLUB, ST.LOUIS,MO.",
          "ST. LOUIS CLUB, ST. LOUIS, MO"
        ],
        "to": "ST.LOUIS CLUB, ST.LOUIS,MO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "57 BROAD ST. NY",
          "57 BROAD ST.NY"
        ],
        "to": "57 BROAD ST. NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHATTANOOGA,TENN.",
          "CHATTANOOGA, TENN."
        ],
        "to": "CHATTANOOGA,TENN."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOSTON, MA",
          "BOSTON,MA."
        ],
        "to": "BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "STEAMSHIP KAISER WILHELM DER GROSSE",
          "STEAMSHIP KAISER WILHELM DER GROSSER"
        ],
        "to": "STEAMSHIP KAISER WILHELM DER GROSSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MURRAY HILL HOTEL,NY",
          "MURRAY HILL HOTEL NY"
        ],
        "to": "MURRAY HILL HOTEL,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CECIL HOTEL, LONDON, ENGLAND",
          "CECIL HOTEL,LONDON,ENGLAND"
        ],
        "to": "CECIL HOTEL, LONDON, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SPRINGFIELD,MASS.",
          "SPRINGFIELD, MASS."
        ],
        "to": "SPRINGFIELD,MASS."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALBANY, NY",
          "ALBANY,NY"
        ],
        "to": "ALBANY, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DENVER, COLO.",
          "DENVER,COLO."
        ],
        "to": "DENVER, COLO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "VIRGINIA BEACH, VA",
          "VIRGINIA BEACH,VA"
        ],
        "to": "VIRGINIA BEACH, VA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO'S NY",
          "DELMONICO'S,NY"
        ],
        "to": "DELMONICO'S NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. PETERSBURG RUSSIA",
          "ST. PETERSBURG.RUSSIA"
        ],
        "to": "ST. PETERSBURG RUSSIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLUMBUS, OHIO",
          "COLUMBUS,OHIO"
        ],
        "to": "COLUMBUS, OHIO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICO, NEW YORK, NY",
          "DELMONICO,NEW YORK NY"
        ],
        "to": "DELMONICO, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION LEAGUE PHILADELPHIA PA",
          "UNION LEAGUE, PHILADELPHIA,PA"
        ],
        "to": "UNION LEAGUE PHILADELPHIA PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOFFMAN HOUSE, MADISON SQUARE, NY",
          "HOFFMAN HOUSE,MADISON SQUARE,NY"
        ],
        "to": "HOFFMAN HOUSE, MADISON SQUARE, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TREMONT TEMPLE, BOSTON, MASS.",
          "TREMONT TEMPLE,BOSTON MASS"
        ],
        "to": "TREMONT TEMPLE, BOSTON, MASS."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DEEMING HALL, ITHACA, NY",
          "DEEMING HALL,ITHACA,NY"
        ],
        "to": "DEEMING HALL, ITHACA, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LINCOLN CLUB {BROOKLYN, NY}",
          "LINCOLN CLUB,BROOKLYN,NY"
        ],
        "to": "LINCOLN CLUB {BROOKLYN, NY}"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WASHINGTON, DC",
          "WASHINGTON,D.C."
        ],
        "to": "WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TOKYO, JAPAN",
          "TOKYO,JAPAN"
        ],
        "to": "TOKYO, JAPAN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SS.KOHE MARU",
          "EN ROUTE ABOARD SS. KOHE MARU"
        ],
        "to": "EN ROUTE ABOARD SS.KOHE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BROOKLYN, NY",
          "BROOKLYN,NY"
        ],
        "to": "BROOKLYN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FARGO, NORTH DAKOTA",
          "FARGO,NORTH DAKOTA"
        ],
        "to": "FARGO, NORTH DAKOTA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "STEAMSHIP NORTH WEST",
          "STEAMSHIP NORTHWEST"
        ],
        "to": "STEAMSHIP NORTH WEST"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "374 FIFTH AVENUE, NY, NY",
          "374 FIFTH AVENUE, NY,NY"
        ],
        "to": "374 FIFTH AVENUE, NY, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PORTLAND, ME",
          "PORTLAND,ME"
        ],
        "to": "PORTLAND, ME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. NICHOLAS HOTEL, CINCINNATI, OH",
          "ST.NICHOLAS HOTEL, CINCINNATI, OH"
        ],
        "to": "ST. NICHOLAS HOTEL, CINCINNATI, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BERGEN, NORWAY",
          "BERGEN,NORWAY"
        ],
        "to": "BERGEN, NORWAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE COCHRAN, WASHINGTON, DC",
          "THE COCHRAN, WASHINGTON,D.C."
        ],
        "to": "THE COCHRAN, WASHINGTON, DC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ARCANUM HALL,ELIZABETH NJ",
          "ARCANUM HALL,ELIZABETH,NJ"
        ],
        "to": "ARCANUM HALL,ELIZABETH NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD DAMPFER H.H. MEIER",
          "EN ROUTE ABOARD DAMPFER H.H.MEIER"
        ],
        "to": "EN ROUTE ABOARD DAMPFER H.H. MEIER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "YOUNG'S HOTEL, BOSTON, MA",
          "YOUNGS HOTEL,BOSTON,MA"
        ],
        "to": "YOUNG'S HOTEL, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ATLANTIC CITY, NJ",
          "ATLANTIC CITY,NJ"
        ],
        "to": "ATLANTIC CITY, NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BERLIN, GERMANY",
          "BERLIN,GERMANY"
        ],
        "to": "BERLIN, GERMANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE WALNUT ROOMS, THE GRAND HOTEL, TRAFALGAR SQUARE, LONDON, ENGLAND",
          "THE WALNUT ROOMS THE GRAND HOTEL, TRAFALGAR SQUARE, LONDON,ENGLAND"
        ],
        "to": "THE WALNUT ROOMS, THE GRAND HOTEL, TRAFALGAR SQUARE, LONDON, ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAMPA, FL",
          "TAMPA,FL"
        ],
        "to": "TAMPA, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD SS. KINSHIN MARU",
          "EN ROUTE ABOARD SS.KINSHIN MARU"
        ],
        "to": "EN ROUTE ABOARD SS. KINSHIN MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALTOONA, PA",
          "ALTOONA,PA"
        ],
        "to": "ALTOONA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL, MELBOURNE",
          "GRAND HOTEL,MELBOURNE"
        ],
        "to": "GRAND HOTEL, MELBOURNE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SARATOGA SPRINGS, NY",
          "SARATOGA SPRINGS,NY"
        ],
        "to": "SARATOGA SPRINGS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ABOARD S S VADERLAND",
          "ABOARD S.S. VADERLAND"
        ],
        "to": "ABOARD S S VADERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MIAMI BISCAYNE BAY, FL",
          "MIAMI BISCAYNE BAY,FL"
        ],
        "to": "MIAMI BISCAYNE BAY, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DWLMONICO'S NY",
          "DWLMONICO'S,NY"
        ],
        "to": "DWLMONICO'S NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WEST END HOTEL, NEW ORLEANS, LA",
          "WEST END HOTEL, NEW ORLEANS,LA."
        ],
        "to": "WEST END HOTEL, NEW ORLEANS, LA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHANLEY'S, NY",
          "SHANLEY'S,NY"
        ],
        "to": "SHANLEY'S, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PALAIS ROYAL - CHRISTIANIA,NORWAY",
          "PALAIS ROYAL, CHRISTIANIA, NORWAY"
        ],
        "to": "PALAIS ROYAL - CHRISTIANIA,NORWAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MANILA, P.I.",
          "MANILA,P.I."
        ],
        "to": "MANILA, P.I."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALBANY CLUB ALBANY,NY",
          "ALBANY CLUB, ALBANY, NY"
        ],
        "to": "ALBANY CLUB ALBANY,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PINEHURST,N.C.",
          "PINEHURST, NC"
        ],
        "to": "PINEHURST,N.C."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST. GEORGE, NYACK, NY",
          "HOTEL ST. GEORGE,NYACK,NY"
        ],
        "to": "HOTEL ST. GEORGE, NYACK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUFFALO, NY",
          "BUFFALO,NY"
        ],
        "to": "BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROME, ITALY",
          "ROME,ITALY"
        ],
        "to": "ROME, ITALY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "383 6TH AVE.,1212 BWAY.,& 1476 BWAY. NY",
          "383 6TH AVE.,1476 BWAY.,1212 BWAY., NY"
        ],
        "to": "383 6TH AVE.,1212 BWAY.,& 1476 BWAY. NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CINCINNATI, OH",
          "CINCINNATI,OH"
        ],
        "to": "CINCINNATI, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CATARACT HOUSE, NIAGARA FALLS, NY",
          "CATARACT HOUSE,NIAGARA FALLS,NY"
        ],
        "to": "CATARACT HOUSE, NIAGARA FALLS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PROVIDENCE, RI",
          "PROVIDENCE,RI"
        ],
        "to": "PROVIDENCE, RI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE S.S.VADERLAND",
          "EN ROUTE S.S VADERLAND"
        ],
        "to": "EN ROUTE S.S.VADERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAMPA, FLORIDA",
          "TAMPA,FLORIDA"
        ],
        "to": "TAMPA, FLORIDA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE S.S.\"BARBAROSSA\"",
          "EN ROUTE S.S \"BARBAROSSA\""
        ],
        "to": "EN ROUTE S.S.\"BARBAROSSA\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MELBOURNE, AUSTRALIA",
          "MELBOURNE,AUSTRALIA"
        ],
        "to": "MELBOURNE, AUSTRALIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MONTREAL CANADA",
          "MONTREAL,CANADA"
        ],
        "to": "MONTREAL CANADA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SIXTY-SIXTH STREET & BROADWAY, NEW YORK, NY",
          "SIXTY SIXTH STREET & BROADWAY, NEW YORK, NY"
        ],
        "to": "SIXTY-SIXTH STREET & BROADWAY, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RECTOR'S ,NY",
          "RECTOR'S,NY"
        ],
        "to": "RECTOR'S ,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELMAR,NJ",
          "BELMAR, NJ"
        ],
        "to": "BELMAR,NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE S.S. ZEELAND",
          "EN ROUTE S.S.ZEELAND"
        ],
        "to": "EN ROUTE S.S. ZEELAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HAMBURG, GERMANY",
          "HAMBURG,GERMANY"
        ],
        "to": "HAMBURG, GERMANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BAKER CITY, OREGON",
          "BAKER CITY,OREGON"
        ],
        "to": "BAKER CITY, OREGON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARIS,FRANCE",
          "PARIS, FRANCE"
        ],
        "to": "PARIS,FRANCE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "\"ST. LOUIS\"",
          "\"ST.LOUIS\""
        ],
        "to": "\"ST. LOUIS\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIAGARA FALLS, NY",
          "NIAGARA FALLS,NY"
        ],
        "to": "NIAGARA FALLS, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VICTORY, PUT-IN-BAY-ISLAND, LAKE ERIE, OH.",
          "HOTEL VICTORY,PUT-IN-BAY ISLAND,LAKE ERIE,OH"
        ],
        "to": "HOTEL VICTORY, PUT-IN-BAY-ISLAND, LAKE ERIE, OH."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARK ROW BUILDING NEW YORK,NY",
          "PARK ROW BUILDING, NEW YORK, NY"
        ],
        "to": "PARK ROW BUILDING NEW YORK,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. ROTTERDAM",
          "R.M.S.ROTTERDAM"
        ],
        "to": "R.M.S. ROTTERDAM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK CITY, NY",
          "NEW YORK CITY,NY"
        ],
        "to": "NEW YORK CITY, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNION SQUARE, NEW YORK, NY",
          "UNION SQUARE,NEW YORK,NY"
        ],
        "to": "UNION SQUARE, NEW YORK, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE BOURSE, PHILADELPHIA PA",
          "THE BOURSE, PHILADELPHIA,PA"
        ],
        "to": "THE BOURSE, PHILADELPHIA PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PARKER HOUSE, BOSTON, MA",
          "PARKER HOUSE,BOSTON,MA"
        ],
        "to": "PARKER HOUSE, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PALM BEACH, FL",
          "PALM BEACH,FL"
        ],
        "to": "PALM BEACH, FL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KRUEGER AUDITORIUM NEWARK NJ",
          "KRUEGER AUDITORIUM,NEWARK NJ"
        ],
        "to": "KRUEGER AUDITORIUM NEWARK NJ"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SS WESTERNLAND",
          "S.S.WESTERNLAND"
        ],
        "to": "SS WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLEVELAND, OH",
          "CLEVELAND,OH"
        ],
        "to": "CLEVELAND, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD S.S. WESTERNLAND",
          "ENROUTE ABOARD S.S. WESTERNLAND"
        ],
        "to": "EN ROUTE ABOARD S.S. WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PUT-IN-BAY-ISLAND, LAKE ERIE, OH",
          "PUT-IN-BAY ISLAND, LAKE ERIE, OH"
        ],
        "to": "PUT-IN-BAY-ISLAND, LAKE ERIE, OH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MUNICH, GERMANY",
          "MUNICH,GERMANY"
        ],
        "to": "MUNICH, GERMANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BOSTON,MASS",
          "BOSTON, MASS"
        ],
        "to": "BOSTON,MASS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REVERE HOUSE, BOSTON,MASS",
          "REVERE HOUSE,BOSTON,MASS."
        ],
        "to": "REVERE HOUSE, BOSTON,MASS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MILWAUKEE, WI",
          "MILWAUKEE,WI"
        ],
        "to": "MILWAUKEE, WI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NASSAU,BAHAMAS",
          "NASSAU, BAHAMAS"
        ],
        "to": "NASSAU,BAHAMAS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HAVANA, CUBA",
          "HAVANA,CUBA"
        ],
        "to": "HAVANA, CUBA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELLICOTT SQUARE, BUFFALO, NY",
          "ELLICOTT SQUARE,BUFFALO, NY"
        ],
        "to": "ELLICOTT SQUARE, BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE ABOARD EXPRESS STEAMER AUGUSTE VICTORIA",
          "ENROUTE ABOARD EXPRESS-STEAMER AUGUSTE VICTORIA"
        ],
        "to": "EN ROUTE ABOARD EXPRESS STEAMER AUGUSTE VICTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELLICOTT CLUB, BUFFALO, NY",
          "ELLICOTT CLUB,BUFFALO,NY"
        ],
        "to": "ELLICOTT CLUB, BUFFALO, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO, IL",
          "CHICAGO,IL"
        ],
        "to": "CHICAGO, IL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MANHATTAN, NY",
          "HOTEL MANHATTAN,NY"
        ],
        "to": "HOTEL MANHATTAN, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "QUEEN CITY CLUB, CINCINNATI ,OHIO",
          "QUEEN CITY CLUB, CINCINNATI,OHIO"
        ],
        "to": "QUEEN CITY CLUB, CINCINNATI ,OHIO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST.DENIS HOTEL NY",
          "ST.DENIS HOTEL,NY"
        ],
        "to": "ST.DENIS HOTEL NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME, BOSTON, MA",
          "HOTEL VENDOME,BOSTON.MA"
        ],
        "to": "HOTEL VENDOME, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ASHEVILLE,NC",
          "ASHEVILLE, NC"
        ],
        "to": "ASHEVILLE,NC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LOGAN HOUSE, ALTOONA, PA",
          "LOGAN HOUSE,ALTOONA,PA"
        ],
        "to": "LOGAN HOUSE, ALTOONA, PA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MALONE, NY",
          "MALONE,NY"
        ],
        "to": "MALONE, NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME BOSTON, MASS",
          "HOTEL VENDOME, BOSTON,MASS"
        ],
        "to": "HOTEL VENDOME BOSTON, MASS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FARGO, ND",
          "FARGO,ND"
        ],
        "to": "FARGO, ND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WATSON HOUSE, BABLON, L.I., N.Y.",
          "WATSON HOUSE,BABLON, L.I. N.Y."
        ],
        "to": "WATSON HOUSE, BABLON, L.I., N.Y."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MOBILE AL",
          "MOBILE,AL."
        ],
        "to": "MOBILE AL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAMPA,FLA.",
          "TAMPA, FLA."
        ],
        "to": "TAMPA,FLA."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMERICAN INN, PORTLAND OR",
          "AMERICAN INN, PORTLAND,OR"
        ],
        "to": "AMERICAN INN, PORTLAND OR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "LAKE GEORGE,NY",
          "LAKE GEORGE, NY"
        ],
        "to": "LAKE GEORGE,NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EN ROUTE",
          "ENROUTE"
        ],
        "to": "EN ROUTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON ENGLAND",
          "WHITEHALL ROOMS,THE HOTEL METROPOLE, LONDON,ENGLAND"
        ],
        "to": "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON ENGLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BRUNSWICK ME",
          "BRUNSWICK,ME."
        ],
        "to": "BRUNSWICK ME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLORADO SPRINGS, CO",
          "COLORADO SPRINGS,COLO."
        ],
        "to": "COLORADO SPRINGS, CO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FANEUIL HALL, BOSTON, MA",
          "FANEUIL HALL,BOSTON,MA."
        ],
        "to": "FANEUIL HALL, BOSTON, MA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DETROIT, MI",
          "DETROIT,MI"
        ],
        "to": "DETROIT, MI"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Occasion",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Occasion",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER ANNUAL EVENT",
          "OTHER {ANNUAL EVENT}",
          "OTHER, ANNUAL EVENT"
        ],
        "to": "OTHER ANNUAL EVENT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PATRIOTIC HOLIDAY",
          "PATRIOTIC HOLIDAY.",
          "PATRIOTIC HOLIDAY. HOLIDAY"
        ],
        "to": "PATRIOTIC HOLIDAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER ANNIVERSARY",
          "OTHER - ANNIVERSARY",
          "OTHER {ANNIVERSARY}"
        ],
        "to": "OTHER ANNIVERSARY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SECULAR HOLIDAY",
          "SECULAR HOLIDAY. HOLIDAY",
          "SECULAR HOLIDAY HOLIDAY"
        ],
        "to": "SECULAR HOLIDAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER SOC",
          "OTHER SOC.",
          "OTHER, SOC"
        ],
        "to": "OTHER SOC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "---------",
          ""
        ],
        "to": "---------"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER REUNION",
          "OTHER - REUNION"
        ],
        "to": "OTHER REUNION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER DAILY DATED MENU",
          "OTHER DATED DAILY MENU"
        ],
        "to": "OTHER DAILY DATED MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANNIVERSARY",
          "ANNIVERSARY."
        ],
        "to": "ANNIVERSARY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMPL",
          "COMPL."
        ],
        "to": "COMPL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER",
          "OTHER,"
        ],
        "to": "OTHER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER ANNUAL MEETING",
          "OTHER {ANNUAL MEETING}"
        ],
        "to": "OTHER ANNUAL MEETING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RELIG. HOLIDAY",
          "RELIG HOLIDAY"
        ],
        "to": "RELIG. HOLIDAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REUNION",
          "RE-UNION"
        ],
        "to": "REUNION"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Occasion",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Occasion",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "---------",
          ""
        ],
        "to": "---------"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Occasion",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Occasion",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "---------",
          ""
        ],
        "to": "---------"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Occasion",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Occasion",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "---------",
          ""
        ],
        "to": "---------"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Occasion",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Occasion",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "---------",
          ""
        ],
        "to": "---------"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Occasion",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Occasion",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "---------",
          ""
        ],
        "to": "---------"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER ANNUAL EVENT",
          "OTHER,ANNUAL EVENT"
        ],
        "to": "OTHER ANNUAL EVENT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DAILY MENU",
          "DAILYMENU"
        ],
        "to": "DAILY MENU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER COMMEMORATION",
          "OTHER,COMMEMORATION"
        ],
        "to": "OTHER COMMEMORATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER ANNUAL BANQUET",
          "OTHER,ANNUAL BANQUET"
        ],
        "to": "OTHER ANNUAL BANQUET"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER ANNUAL MEETING",
          "OTHER,ANNUAL MEETING"
        ],
        "to": "OTHER ANNUAL MEETING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RELIG. HOLIDAY",
          "RELIG.HOLIDAY"
        ],
        "to": "RELIG. HOLIDAY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "OTHER ANNUAL DINNER",
          "OTHER,,ANNUAL DINNER"
        ],
        "to": "OTHER ANNUAL DINNER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TRIP OF PRES. MCKINLEY, HIS CABINET & GUESTS",
          "TRIP OF PRES. MCKINLEY,HIS CABINET & GUESTS"
        ],
        "to": "TRIP OF PRES. MCKINLEY, HIS CABINET & GUESTS"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Location",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Location",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHILDS",
          "CHILDS'",
          "CHILD'S"
        ],
        "to": "CHILDS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAMERCY PARK HOTEL",
          "HOTEL GRAMERCY PARK",
          "GRAMERCY PARK HOTEL HOTEL GRAMERCY PARK"
        ],
        "to": "GRAMERCY PARK HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN",
          "NORDDEUTSCHER LLOYD, BREMEN",
          "BREMEN NORDDEUTSCHER LLOYD"
        ],
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RIGGS'",
          "RIGG'S",
          "RIGGS"
        ],
        "to": "RIGGS'"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S.",
          "USMS",
          "U.S.M.S"
        ],
        "to": "U.S.M.S."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S. NEW YORK",
          "USMS NEW YORK",
          "U.S.M.S NEW YORK"
        ],
        "to": "U.S.M.S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELMONICOS",
          "DELMONICO'S",
          "DELMONICOS."
        ],
        "to": "DELMONICOS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE MERCHANT'S CLUB",
          "THE MERCHANTS CLUB",
          "THE MERCHANTS' CLUB"
        ],
        "to": "THE MERCHANT'S CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCHANT'S CLUB",
          "MERCHANTS' CLUB",
          "MERCHANTS CLUB"
        ],
        "to": "MERCHANT'S CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. DENIS HOTEL",
          "HOTEL ST. DENIS",
          "ST, DENIS HOTEL"
        ],
        "to": "ST. DENIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMERICAN MEDICAL EDITOR'S ASSOCIATION",
          "AMERICAN MEDICAL EDITORS' ASSOCIATION",
          "AMERICAN MEDICAL EDITORS ASSOCIATION"
        ],
        "to": "AMERICAN MEDICAL EDITOR'S ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL METROPOLE",
          "METROPOLE HOTEL"
        ],
        "to": "HOTEL METROPOLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. AMERICAN SHIPPER",
          "S.S. \"AMERICAN SHIPPER\"\"\""
        ],
        "to": "S.S. AMERICAN SHIPPER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE MERCHANT'S CLUB OF CHICAGO",
          "THE MERCHANTS CLUB OF CHICAGO"
        ],
        "to": "THE MERCHANT'S CLUB OF CHICAGO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NORDEUTSCHER LLOYD BREMEN",
          "NORDEUTSCHER LLOYD, BREMEN"
        ],
        "to": "NORDEUTSCHER LLOYD BREMEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST PATRICK"
        ],
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE. GLE. TRANSATLANTIQUE"
        ],
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DE L'ANGE HOTEL",
          "HOTEL DE L'ANGE"
        ],
        "to": "DE L'ANGE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RIGG'S TWENTIETH STREET RESTAURANT",
          "RIGGS' TWENTIETH STREET RESTAURANT"
        ],
        "to": "RIGG'S TWENTIETH STREET RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS",
          "ANCIENT AND HONORABLE ARTILLERY CO. OF MASSACHUSETTS"
        ],
        "to": "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE NEW WILLARD HOTEL",
          "THE NEW WILLARD HOTEL."
        ],
        "to": "THE NEW WILLARD HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. FRANCIS HOTEL",
          "HOTEL ST. FRANCIS"
        ],
        "to": "ST. FRANCIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK",
          "SOCIETY OF THE SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
        ],
        "to": "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DEL PRADO HOTEL",
          "HOTEL DEL PRADO"
        ],
        "to": "DEL PRADO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHILDS' LUNCH ROOMS",
          "CHILD'S LUNCH ROOMS"
        ],
        "to": "CHILDS' LUNCH ROOMS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ENGINEERS CLUB",
          "ENGINEERS' CLUB"
        ],
        "to": "ENGINEERS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MANHATTAN",
          "MANHATTAN HOTEL"
        ],
        "to": "HOTEL MANHATTAN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VICTORY",
          "VICTORY HOTEL"
        ],
        "to": "HOTEL VICTORY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL GRUNEWALD",
          "GRUNEWALD HOTEL"
        ],
        "to": "HOTEL GRUNEWALD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FAIRMONT HOTEL",
          "HOTEL FAIRMONT"
        ],
        "to": "FAIRMONT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ALCAZAR",
          "ALCAZAR HOTEL"
        ],
        "to": "HOTEL ALCAZAR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. NICHOLAS HOTEL",
          "HOTEL ST. NICHOLAS"
        ],
        "to": "ST. NICHOLAS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL COLORADO",
          "COLORADO HOTEL"
        ],
        "to": "HOTEL COLORADO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COSMOPOLITAN HOTEL",
          "COSMOPOLITAN.. HOTEL"
        ],
        "to": "COSMOPOLITAN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL COLOMBO",
          "COLOMBO HOTEL"
        ],
        "to": "HOTEL COLOMBO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ANCIENT ACCEPTED SCOTTISH RITE",
          "ANCIENT & ACCEPTED SCOTTISH RITE"
        ],
        "to": "ANCIENT ACCEPTED SCOTTISH RITE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PIRATE'S HOUSE",
          "PIRATES' HOUSE"
        ],
        "to": "PIRATE'S HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION",
          "MICHIGAN SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "to": "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MERCHANT'S CLUB OF BOSTON",
          "MERCHANTS' CLUB OF BOSTON"
        ],
        "to": "MERCHANT'S CLUB OF BOSTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SECOND PANEL SHERIFF'S JURY",
          "SHERIFF'S JURY SECOND PANEL"
        ],
        "to": "SECOND PANEL SHERIFF'S JURY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ELKS CLUB HOUSE",
          "ELKS' CLUB HOUSE"
        ],
        "to": "ELKS CLUB HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DU MUSEE",
          "HOTEL DU MUSEE'"
        ],
        "to": "HOTEL DU MUSEE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "TAVERN ON THE GREEN",
          "THE TAVERN ON THE GREEN"
        ],
        "to": "TAVERN ON THE GREEN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT"
        ],
        "to": "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MINOT HOTEL",
          "HOTEL MINOT"
        ],
        "to": "MINOT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RESTAURANT AND/OR LOCATION NOT GIVEN.",
          "RESTAURANT AND/OR LOCATION NOT GIVEN"
        ],
        "to": "RESTAURANT AND/OR LOCATION NOT GIVEN."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "KEMPINSKI RESTAURANT",
          "RESTAURANT KEMPINSKI"
        ],
        "to": "KEMPINSKI RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S NEW AMSTERDAM",
          "S.S. NEW AMSTERDAM"
        ],
        "to": "S.S NEW AMSTERDAM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL KNICKERBOCKER",
          "KNICKERBOCKER HOTEL"
        ],
        "to": "HOTEL KNICKERBOCKER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHERRY'S",
          "SHERRYS"
        ],
        "to": "SHERRY'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMBASSADOR HOTEL",
          "HOTEL AMBASSADOR"
        ],
        "to": "AMBASSADOR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BRISTOL HOTEL",
          "HOTEL BRISTOL"
        ],
        "to": "BRISTOL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SCHWARZWALDER'S NATUR WEINHAUS",
          "SCHWARZWALDERS NATUR WEINHAUS"
        ],
        "to": "SCHWARZWALDER'S NATUR WEINHAUS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE COMMODORE HOTEL",
          "THE HOTEL COMMODORE"
        ],
        "to": "THE COMMODORE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALGONQUIN HOTEL",
          "HOTEL ALGONQUIN"
        ],
        "to": "ALGONQUIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WORTHY",
          "WORTHY HOTEL"
        ],
        "to": "HOTEL WORTHY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MAJESTIC",
          "MAJESTIC HOTEL"
        ],
        "to": "HOTEL MAJESTIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WILLARD'S HOTEL",
          "WILLARDS HOTEL"
        ],
        "to": "WILLARD'S HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND BALLROOM OF THE HOTEL PLAZA",
          "THE GRAND BALLROOM OF THE HOTEL PLAZA"
        ],
        "to": "GRAND BALLROOM OF THE HOTEL PLAZA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ASTOR",
          "ASTOR HOTEL"
        ],
        "to": "HOTEL ASTOR"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL CHAMBERLIN",
          "CHAMBERLIN HOTEL"
        ],
        "to": "HOTEL CHAMBERLIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GROCERS HALL",
          "GROCERS' HALL"
        ],
        "to": "GROCERS HALL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CONTINENTAL HOTEL",
          "HOTEL CONTINENTAL"
        ],
        "to": "CONTINENTAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLONIAL HOTEL",
          "HOTEL COLONIAL"
        ],
        "to": "COLONIAL HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST. REGIS",
          "ST. REGIS HOTEL"
        ],
        "to": "HOTEL ST. REGIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL NETHERLAND",
          "NETHERLAND HOTEL"
        ],
        "to": "HOTEL NETHERLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST.REGIS HOTEL",
          "HOTEL ST.REGIS"
        ],
        "to": "ST.REGIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. CHARLES HOTEL",
          "ST CHARLES HOTEL"
        ],
        "to": "ST. CHARLES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VELVET",
          "VELVET HOTEL"
        ],
        "to": "HOTEL VELVET"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI",
          "SOCIETY SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
        ],
        "to": "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EMPIRE HOTEL",
          "HOTEL EMPIRE"
        ],
        "to": "EMPIRE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REUBEN'S",
          "REUBEN'S."
        ],
        "to": "REUBEN'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PAQUEBOT FRANCE \"\"",
          "PAQUEBOT FRANCE"
        ],
        "to": "PAQUEBOT FRANCE \"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROYAL PALM HOTEL",
          "HOTEL ROYAL PALM"
        ],
        "to": "ROYAL PALM HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GEORGE WASHINGTON HOTEL",
          "HOTEL GEORGE WASHINGTON"
        ],
        "to": "GEORGE WASHINGTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.G.",
          "RG"
        ],
        "to": "R.G."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COLUMBIA HOTEL",
          "HOTEL COLUMBIA"
        ],
        "to": "COLUMBIA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. OCEANIC",
          "RMS OCEANIC"
        ],
        "to": "R.M.S. OCEANIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW GRAND HOTEL",
          "GRAND NEW HOTEL"
        ],
        "to": "NEW GRAND HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE HOTEL PLAZA",
          "THE PLAZA HOTEL"
        ],
        "to": "THE HOTEL PLAZA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "XIII CLUB",
          "CLUB XIII"
        ],
        "to": "XIII CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PLACE VIGER HOTEL",
          "HOTEL PLACE VIGER"
        ],
        "to": "PLACE VIGER HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL LAFAYETTE",
          "LAFAYETTE HOTEL"
        ],
        "to": "HOTEL LAFAYETTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION",
          "EMPIRE STATE SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "to": "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PENNSYLVANIA",
          "PENNSYLVANIA HOTEL"
        ],
        "to": "HOTEL PENNSYLVANIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL"
        ],
        "to": "HOTEL SAVOY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DENNIS",
          "DENNIS HOTEL"
        ],
        "to": "HOTEL DENNIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. PARTHIA",
          "R.M.S. \"PARTHIA\"\"\""
        ],
        "to": "R.M.S. PARTHIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MOUQUIN RESTAURANT AND WINE CO",
          "MOUQUIN RESTAURANT AND WINE CO."
        ],
        "to": "MOUQUIN RESTAURANT AND WINE CO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. MINNETONKA",
          "S.S. \"MINNETONKA\"\"\""
        ],
        "to": "S.S. MINNETONKA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL COMMODORE",
          "COMMODORE HOTEL"
        ],
        "to": "HOTEL COMMODORE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "USMS ST LOUIS",
          "U.S.M.S. ST. LOUIS"
        ],
        "to": "USMS ST LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WINTHROP",
          "WINTHROP HOTEL"
        ],
        "to": "HOTEL WINTHROP"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MEYER'S HOTEL",
          "MEYERS HOTEL"
        ],
        "to": "MEYER'S HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PHONIX",
          "PHONIX HOTEL"
        ],
        "to": "HOTEL PHONIX"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL BILTMORE",
          "BILTMORE HOTEL"
        ],
        "to": "HOTEL BILTMORE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL JEFFERSON",
          "JEFFERSON HOTEL"
        ],
        "to": "HOTEL JEFFERSON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MCNELLS"
        ],
        "to": "SMITH & MCNELL'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL D'ANGLETERRE",
          "D'ANGLETERRE HOTEL"
        ],
        "to": "HOTEL D'ANGLETERRE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \"QUEEN MARY\"\"\"",
          "R.M.S. QUEEN MARY \"\""
        ],
        "to": "R.M.S. \"QUEEN MARY\"\"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CLAREMONT HOTEL",
          "HOTEL CLAREMONT"
        ],
        "to": "CLAREMONT HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DEL CORONADO",
          "DEL CORONADO HOTEL"
        ],
        "to": "HOTEL DEL CORONADO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL CHAMPLAIN",
          "CHAMPLAIN HOTEL"
        ],
        "to": "HOTEL CHAMPLAIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. MAURETANIA \"\"",
          "R.M.S. MAURETANIA"
        ],
        "to": "R.M.S. MAURETANIA \"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MET-LIFE BUILDING",
          "METLIFE BUILDING"
        ],
        "to": "MET-LIFE BUILDING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. \"FREDERIK VIII\"",
          "S.S. FREDERIK VIII"
        ],
        "to": "S.S. \"FREDERIK VIII\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL EASTMAN",
          "EASTMAN HOTEL"
        ],
        "to": "HOTEL EASTMAN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BALLROOM, THE PLAZA",
          "THE PLAZA BALLROOM"
        ],
        "to": "BALLROOM, THE PLAZA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENZIE'S HOTEL",
          "MENZIES HOTEL"
        ],
        "to": "MENZIE'S HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "AMERICAN BANKERS ASSOCIATION",
          "AMERICAN BANKERS' ASSOCIATION"
        ],
        "to": "AMERICAN BANKERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BREVOORT RESTAURANT",
          "RESTAURANT BREVOORT"
        ],
        "to": "BREVOORT RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. \"ILE DE FRANCE\"\"\"",
          "S.S. ILE DE FRANCE"
        ],
        "to": "S.S. \"ILE DE FRANCE\"\"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MASTER PRINTERS' ASSOCIATION",
          "MASTER PRINTERS ASSOCIATION"
        ],
        "to": "MASTER PRINTERS' ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RESTAURANT MAYAN",
          "MAYAN RESTAURANT"
        ],
        "to": "RESTAURANT MAYAN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA",
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES. COMMANDERY OF THE STATE OF MINNESOTA"
        ],
        "to": "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CASTLETON HOTEL",
          "HOTEL CASTLETON"
        ],
        "to": "CASTLETON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ADAMS' RESTAURANT",
          "ADAM'S RESTAURANT"
        ],
        "to": "ADAMS' RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK",
          "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
        ],
        "to": "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRENOBLE HOTEL",
          "HOTEL GRENOBLE"
        ],
        "to": "GRENOBLE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PENN RR PULLMAN DINING CAR SERVICE",
          "PENN. RR PULLMAN DINING CAR SERVICE"
        ],
        "to": "PENN RR PULLMAN DINING CAR SERVICE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SANTA FE ROUTE",
          "SANTA FE' ROUTE"
        ],
        "to": "SANTA FE ROUTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALPHA KAPPA KAPPA",
          "KAPPA ALPHA"
        ],
        "to": "ALPHA KAPPA KAPPA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NATIONAL COOPER'S ASSOCIATION",
          "NATIONAL COOPERS ASSOCIATION"
        ],
        "to": "NATIONAL COOPER'S ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WINDSOR HOTEL",
          "HOTEL WINDSOR"
        ],
        "to": "WINDSOR HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL NATIONAL",
          "NATIONAL HOTEL"
        ],
        "to": "HOTEL NATIONAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MARIE ANTOINETTE",
          "MARIE ANTOINETTE HOTEL"
        ],
        "to": "HOTEL MARIE ANTOINETTE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL QUISISANA",
          "QUISISANA HOTEL"
        ],
        "to": "HOTEL QUISISANA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW YORK CENTRAL SYSTEM, BOSTON & ALBANY RAILROAD",
          "BOSTON & ALBANY RAILROAD , NEW YORK CENTRAL SYSTEM"
        ],
        "to": "NEW YORK CENTRAL SYSTEM, BOSTON & ALBANY RAILROAD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY PLAZA HOTEL",
          "HOTEL COPLEY PLAZA"
        ],
        "to": "COPLEY PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FIFTH AVENUE HOTEL",
          "FIFTH AVENUE HOTEL }"
        ],
        "to": "FIFTH AVENUE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ALBANY ZOUAVE CADETS OLD GUARD",
          "OLD GUARD ALBANY ZOUAVE CADETS"
        ],
        "to": "ALBANY ZOUAVE CADETS OLD GUARD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. GEORGE'S SOCIETY",
          "ST. GEORGES SOCIETY"
        ],
        "to": "ST. GEORGE'S SOCIETY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SAN REMO HOTEL",
          "HOTEL SAN REMO"
        ],
        "to": "SAN REMO HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SHANLEY'S",
          "SHANLEYS"
        ],
        "to": "SHANLEY'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL IMPERIAL",
          "IMPERIAL HOTEL"
        ],
        "to": "HOTEL IMPERIAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRAUNCES' TAVERN",
          "FRAUNCES TAVERN"
        ],
        "to": "FRAUNCES' TAVERN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ST. GEORGE",
          "ST. GEORGE HOTEL"
        ],
        "to": "HOTEL ST. GEORGE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GRAND HOTEL ROYAL",
          "ROYAL GRAND HOTEL"
        ],
        "to": "GRAND HOTEL ROYAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA",
          "THE ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
        ],
        "to": "ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PLAZA",
          "PLAZA HOTEL"
        ],
        "to": "HOTEL PLAZA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "YORK HOTEL",
          "HOTEL YORK"
        ],
        "to": "YORK HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL ROYAL",
          "ROYAL HOTEL"
        ],
        "to": "HOTEL ROYAL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME",
          "VENDOME HOTEL"
        ],
        "to": "HOTEL VENDOME"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE TRANSATLANTIQUE",
          "CIE CIE TRANSATLANTIQUE"
        ],
        "to": "CIE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S. ARMY SUBSISTENCE DEPT.",
          "US ARMY SUBSISTENCE DEPT."
        ],
        "to": "U.S. ARMY SUBSISTENCE DEPT."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MARTINIQUE",
          "MARTINIQUE HOTEL"
        ],
        "to": "HOTEL MARTINIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL NEW WESTON",
          "NEW WESTON HOTEL"
        ],
        "to": "HOTEL NEW WESTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY-PLAZA HOTEL",
          "HOTEL COPLEY-PLAZA"
        ],
        "to": "COPLEY-PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VICTORIA",
          "VICTORIA HOTEL"
        ],
        "to": "HOTEL VICTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PONCE DE LEON",
          "PONCE DE LEON HOTEL"
        ],
        "to": "HOTEL PONCE DE LEON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL PONTCHARTRAIN",
          "PONTCHARTRAIN HOTEL"
        ],
        "to": "HOTEL PONTCHARTRAIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL LEXINGTON",
          "LEXINGTON HOTEL"
        ],
        "to": "HOTEL LEXINGTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "REVELSTOKE HOTEL",
          "HOTEL REVELSTOKE"
        ],
        "to": "REVELSTOKE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA S.S. KASUGA",
          "NIPPON YUSEN KAISHA SS KASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA S.S. KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PACIFIC MAIL S.S. CO.",
          "PACIFIC MAIL SS CO."
        ],
        "to": "PACIFIC MAIL S.S. CO."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROANOKE HOTEL",
          "HOTEL ROANOKE"
        ],
        "to": "ROANOKE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DES INDES HOTEL",
          "HOTEL DES INDES"
        ],
        "to": "DES INDES HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BALTIMORE HOTEL",
          "HOTEL BALTIMORE"
        ],
        "to": "BALTIMORE HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL WESTMINSTER",
          "WESTMINSTER HOTEL"
        ],
        "to": "HOTEL WESTMINSTER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL STATLER",
          "STATLER HOTEL"
        ],
        "to": "HOTEL STATLER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL VENDOME AND PROFILE HOUSE",
          "PROFILE HOUSE AND HOTEL VENDOME"
        ],
        "to": "HOTEL VENDOME AND PROFILE HOUSE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "GALLATIN HOTEL",
          "HOTEL GALLATIN"
        ],
        "to": "GALLATIN HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION",
          "NEW ENGLAND SHORTHAND REPORTER'S ASSOCIATION"
        ],
        "to": "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Location",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Location",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. RALEIGH",
          "U.S.S.RALEIGH",
          "U.S.S.S.RALEIGH"
        ],
        "to": "U.S.S. RALEIGH"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOFBRAU HAUS",
          "HOFBRAUHAUS",
          "HOF BRAU HAUS"
        ],
        "to": "HOFBRAU HAUS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA S.S. KOBE MARU",
          "NIPPPON YUSEN KAISHA S.S. KOBE MARU"
        ],
        "to": "NIPPON YUSEN KAISHA S.S.KOBE MARU"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "",
          "L"
        ],
        "to": "UnKnown"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SOCIETA LA PIEMONTESE",
          "SOCIETA'LA PIEMONTESE"
        ],
        "to": "SOCIETA LA PIEMONTESE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL DUPONT",
          "HOTEL DU PONT"
        ],
        "to": "HOTEL DUPONT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.H. MEYER RATHSKELLER",
          "A.H.MEYER RATHSKELLER"
        ],
        "to": "A.H. MEYER RATHSKELLER"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA S.S.KASUGA",
          "NIPPON YUSEN KAISHA S.S. KASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA S.S.KASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE S.S.FRIESLAND",
          "RED STAR LINE SS FRIESLAND"
        ],
        "to": "RED STAR LINE S.S.FRIESLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S. S. PRESIDENT WILSON",
          "S.S. PRESIDENT WILSON"
        ],
        "to": "S. S. PRESIDENT WILSON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE - STRATFORD",
          "BELLEVUE-STRATFORD"
        ],
        "to": "BELLEVUE - STRATFORD"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNITED AIR LINES",
          "UNITED AIRLINES"
        ],
        "to": "UNITED AIR LINES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESAURANT AND CAFE",
          "FLATIRON RESAURANT AND CAFE"
        ],
        "to": "FLAT IRON RESAURANT AND CAFE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY PLAZA",
          "COPLEY-PLAZA"
        ],
        "to": "COPLEY PLAZA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE.GLE. TRANSATLANTIQUE"
        ],
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BELLEVUE STRATFORD HOTEL",
          "BELLEVUE-STRATFORD HOTEL"
        ],
        "to": "BELLEVUE STRATFORD HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUNDESHAUS RESTAURANT",
          "BUNDESHAUSRESTAURANT"
        ],
        "to": "BUNDESHAUS RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. AMSTERDAM",
          "S.S.AMSTERDAM"
        ],
        "to": "S.S. AMSTERDAM"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST.PATRICK"
        ],
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. S.S. ALBERTA",
          "CANADIAN PACIFIC RAILWAY CO. S.S.ALBERTA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. S.S. ALBERTA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE S.S. SOUTHWARK",
          "RED STAR LINE S.S.SOUTHWARK"
        ],
        "to": "RED STAR LINE S.S. SOUTHWARK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. SAN FRANCISCO",
          "U.S.S.SAN FRANCISCO"
        ],
        "to": "U.S.S. SAN FRANCISCO"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE ROUND TABLE",
          "THE ROUNDTABLE"
        ],
        "to": "THE ROUND TABLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. GEORGE'S SOCIETY OF NEW YORK",
          "ST.GEORGE'S SOCIETY OF NEW YORK"
        ],
        "to": "ST. GEORGE'S SOCIETY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "MENZIE'S HOTEL",
          "MENZIES'HOTEL"
        ],
        "to": "MENZIE'S HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BUSINESS MEN'S LEAGUE OF ST. LOUIS",
          "BUSINESS MEN'S LEAGUE OF ST.LOUIS"
        ],
        "to": "BUSINESS MEN'S LEAGUE OF ST. LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PIG'N WHISTLE",
          "PIG N'WHISTLE"
        ],
        "to": "PIG'N WHISTLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. WYOMING",
          "U.S.S. WYOMING"
        ],
        "to": "U. S. S. WYOMING"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK",
          "SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
        ],
        "to": "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ROGERS'RESTAURANT",
          "ROGER'S RESTAURANT"
        ],
        "to": "ROGERS'RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CROMWELL STEAMSHIP COMPANY",
          "CROMWELLL STEAMSHIP COMPANY"
        ],
        "to": "CROMWELL STEAMSHIP COMPANY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE SS WESTERNLAND",
          "RED STAR LINE S.S.WESTERNLAND"
        ],
        "to": "RED STAR LINE SS WESTERNLAND"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "O.D.",
          "O. D."
        ],
        "to": "O.D."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "B&O BLUE LINE",
          "B.& O. BLUE LINE"
        ],
        "to": "B&O BLUE LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK",
          "ST.ANDREWS SOCIETY OF THE STATE OF NEW YORK"
        ],
        "to": "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S ST. PAUL",
          "U.S.M.S.ST. PAUL"
        ],
        "to": "U.S.M.S ST. PAUL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. S.S.ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO. S.S. ATHABASCA"
        ],
        "to": "CANADIAN PACIFIC RAILWAY CO. S.S.ATHABASCA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL LA SALLE",
          "HOTEL LASALLE"
        ],
        "to": "HOTEL LA SALLE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. FRANCIS HOTEL",
          "ST.FRANCIS HOTEL"
        ],
        "to": "ST. FRANCIS HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MC NELLS"
        ],
        "to": "SMITH & MCNELL'S"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "HOTEL MCALPIN",
          "HOTEL MC ALPIN"
        ],
        "to": "HOTEL MCALPIN"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COPLEY-PLAZA HOTEL",
          "COPLEY PLAZA HOTEL"
        ],
        "to": "COPLEY-PLAZA HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "NIPPON YUSEN KAISHA S.S.NASUGA",
          "NIPPON YUSEN KAISHA S.S. NASUGA"
        ],
        "to": "NIPPON YUSEN KAISHA S.S.NASUGA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. NEW YORK",
          "U.S.S. NEW YORK"
        ],
        "to": "U. S. S. NEW YORK"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. FLORIDA",
          "U.S.S. FLORIDA"
        ],
        "to": "U. S. S. FLORIDA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PACIFIC MAIL STEAMSHIP CO./TRANS PACIFIC LINE",
          "PACIFIC MAIL STEAMSHIP CO. TRANS PACIFIC LINE"
        ],
        "to": "PACIFIC MAIL STEAMSHIP CO./TRANS PACIFIC LINE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. AMERICA",
          "S.S.AMERICA"
        ],
        "to": "S.S. AMERICA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESTAURANT & CAFE",
          "FLATIRON RESTAURANT & CAFE"
        ],
        "to": "FLAT IRON RESTAURANT & CAFE"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S.PHILADELPHIA",
          "USMS PHILADELPHIA"
        ],
        "to": "U.S.M.S.PHILADELPHIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DINNER MENU, S. S. VADERLAND, MARCH 18TH, 1910.",
          "DINNER MENU, S.S. VADERLAND, MARCH 18TH, 1910."
        ],
        "to": "DINNER MENU, S. S. VADERLAND, MARCH 18TH, 1910."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RITZ CARLTON HOTEL",
          "RITZ-CARLTON HOTEL"
        ],
        "to": "RITZ CARLTON HOTEL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "WALDORF ASTORIA",
          "WALDORF-ASTORIA"
        ],
        "to": "WALDORF ASTORIA"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "COMMERCIAL CLUB OF ST. LOUIS",
          "COMMERCIAL CLUB OF ST.LOUIS"
        ],
        "to": "COMMERCIAL CLUB OF ST. LOUIS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE COBBLE STONES",
          "THE COBBLESTONES"
        ],
        "to": "THE COBBLE STONES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "THE RENDEZ VOUS",
          "THE RENDEZ-VOUS"
        ],
        "to": "THE RENDEZ VOUS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. UNITED STATES",
          "S. S. UNITED STATES"
        ],
        "to": "S.S. UNITED STATES"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RITZ CARLTON",
          "RITZ-CARLTON"
        ],
        "to": "RITZ CARLTON"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CAFé DES BEAUX ARTS",
          "CAFé DES BEAUX-ARTS"
        ],
        "to": "CAFé DES BEAUX ARTS"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ST. LOUIS CLUB",
          "ST.LOUIS CLUB"
        ],
        "to": "ST. LOUIS CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "FLAT IRON RESTAURANT",
          "FLATIRON RESTAURANT"
        ],
        "to": "FLAT IRON RESTAURANT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DOWN TOWN CLUB",
          "DOWNTOWN CLUB"
        ],
        "to": "DOWN TOWN CLUB"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "RED STAR LINE ANTWERPEN NY",
          "RED STAR LINE ANTWERPEN.NY"
        ],
        "to": "RED STAR LINE ANTWERPEN NY"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. OCEANIC",
          "R.M.S.OCEANIC"
        ],
        "to": "R.M.S. OCEANIC"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CUNARD STEAM SHIP COMPANY LIMITED",
          "CUNARD STEAMSHIP COMPANY LIMITED"
        ],
        "to": "CUNARD STEAM SHIP COMPANY LIMITED"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "SMITH & MC NELL",
          "SMITH & MCNELL"
        ],
        "to": "SMITH & MC NELL"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CHICAGO STATIONERS ASSOCIATION",
          "CHICAGOS STATIONERS ASSOCIATION"
        ],
        "to": "CHICAGO STATIONERS ASSOCIATION"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.W. DENNETT",
          "A.W.DENNETT"
        ],
        "to": "A.W. DENNETT"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "IMPERIAL YACHT CLUB OF ST. PETERSBURG",
          "IMPERIAL YACHT CLUB OF ST.PETERSBURG"
        ],
        "to": "IMPERIAL YACHT CLUB OF ST. PETERSBURG"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Location",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Location",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UNKNOWN",
          "UnKnown"
        ],
        "to": "UNKNOWN"
      }
    ]
  },
  {
    "op": "core/column-addition",
    "description": "Create column Notes 2 at index 9 based on column Notes using expression jython:if value is None or not value:\n    return \"None\"\nelse:    \n    return value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Notes 2",
    "columnInsertIndex": 9,
    "baseColumnName": "Notes",
    "expression": "jython:if value is None or not value:\n    return \"None\"\nelse:    \n    return value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Notes",
    "columnName": "Notes"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Notes 2 to Notes",
    "oldColumnName": "Notes 2",
    "newColumnName": "Notes"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Notes using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Notes",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Notes using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Notes",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CallNumber using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CallNumber",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CallNumber using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CallNumber",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PageCount using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PageCount",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PageCount using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PageCount",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column DishCount using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "DishCount",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Keywords 2 at index 11 based on column Keywords using expression jython:return \"Empty\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Keywords 2",
    "columnInsertIndex": 11,
    "baseColumnName": "Keywords",
    "expression": "jython:return \"Empty\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Keywords",
    "columnName": "Keywords"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Keywords 2 to Keywords",
    "oldColumnName": "Keywords 2",
    "newColumnName": "Keywords"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Language 2 at index 12 based on column Language using expression jython:return \"Empty\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Language 2",
    "columnInsertIndex": 12,
    "baseColumnName": "Language",
    "expression": "jython:return \"Empty\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Language",
    "columnName": "Language"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Language 2 to Language",
    "oldColumnName": "Language 2",
    "newColumnName": "Language"
  },
  {
    "op": "core/column-addition",
    "description": "Create column LocationType 2 at index 15 based on column LocationType using expression jython:return \"Empty\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "LocationType 2",
    "columnInsertIndex": 15,
    "baseColumnName": "LocationType",
    "expression": "jython:return \"Empty\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column LocationType",
    "columnName": "LocationType"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column LocationType 2 to LocationType",
    "oldColumnName": "LocationType 2",
    "newColumnName": "LocationType"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Date using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Date",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Date using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Date",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Date 2 at index 13 based on column Date using expression jython:if value is None or not value:\n    return \"NoTimeProvided\"\nelse:\n    return value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "selectNonTime": true,
          "expression": "value",
          "selectBlank": true,
          "selectError": true,
          "selectTime": true,
          "name": "Date",
          "from": -56165875200000,
          "to": 1,
          "type": "timerange",
          "columnName": "Date"
        }
      ]
    },
    "newColumnName": "Date 2",
    "columnInsertIndex": 13,
    "baseColumnName": "Date",
    "expression": "jython:if value is None or not value:\n    return \"NoTimeProvided\"\nelse:\n    return value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Date",
    "columnName": "Date"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Date 2 to Date",
    "oldColumnName": "Date 2",
    "newColumnName": "Date"
  },
  {
    "op": "core/column-addition",
    "description": "Create column CurrencySymbol 2 at index 17 based on column CurrencySymbol using expression jython:if value is None or not value:\n    return \"&&&\"\nelse:\n    return value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "selectNonTime": true,
          "expression": "value",
          "selectBlank": true,
          "selectError": true,
          "selectTime": true,
          "name": "Date",
          "from": -56165875200000,
          "to": 1,
          "type": "timerange",
          "columnName": "Date"
        }
      ]
    },
    "newColumnName": "CurrencySymbol 2",
    "columnInsertIndex": 17,
    "baseColumnName": "CurrencySymbol",
    "expression": "jython:if value is None or not value:\n    return \"&&&\"\nelse:\n    return value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column CurrencySymbol",
    "columnName": "CurrencySymbol"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column CurrencySymbol 2 to CurrencySymbol",
    "oldColumnName": "CurrencySymbol 2",
    "newColumnName": "CurrencySymbol"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Status using expression value.toUppercase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "selectNonTime": true,
          "expression": "value",
          "selectBlank": true,
          "selectError": true,
          "selectTime": true,
          "name": "Date",
          "from": -56165875200000,
          "to": 1,
          "type": "timerange",
          "columnName": "Date"
        }
      ]
    },
    "columnName": "Status",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  }
]